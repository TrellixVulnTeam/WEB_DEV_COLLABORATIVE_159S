#!/bin/bash

set -e

env_file=.env.test
git_path=/usr/src/app/.git

dotenv () {
  set -a
  [ -f .env ] && . .env
  set +a
}

dotenv

function cleanup() {
  exit_code=$?
  set +e

  echo "Cleaning up..."
  docker-compose stop test
  docker-compose rm -f test
  docker rmi -f $(docker images -qf "dangling=true") &>/dev/null

  rm $env_file

  exit $exit_code
}

trap cleanup INT TERM EXIT

export COMPOSE_FILE=./docker-compose.test.yml

echo "Creating ${env_file} file..."
(
cat << EOF
CI=true
GIT_EMAIL=${GIT_EMAIL}
GIT_USERNAME=${GIT_USERNAME}
GIT_REMOTE_URL=${GIT_REMOTE_URL}
GIT_REMOTE_NAME=${GIT_REMOTE_NAME}
EOF
) > $env_file

echo "Pulling image..."
docker-compose pull

echo "Building services..."
docker-compose build

echo "Preparing container..."
container=$(docker-compose run -d --rm test tail -f /dev/null)

docker cp .git $container:$git_path
docker exec -u 0 $container chown -R docker:docker $git_path

echo "Running tests..."
docker exec $container bash -c "yarn test:patchset"
