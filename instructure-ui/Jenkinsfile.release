pipeline {
  agent { label 'docker' }

  environment {
    NPM_EMAIL="${NPM_EMAIL}"
    GIT_EMAIL="${GIT_EMAIL}"
    GIT_USERNAME="${GIT_USERNAME}"
    GIT_REMOTE_URL="${GIT_REMOTE_URL}"
    GIT_REMOTE_NAME="${GIT_REMOTE_NAME}"
    UV_THREADPOOL_SIZE=128
  }

  stages {
    stage('Release') {
      steps {
        withCredentials([
          sshUserPrivateKey(
            credentialsId: '44aa91d6-ab24-498a-b2b4-911bcb17cc35',
            keyFileVariable: 'SSH_KEY_PATH',
            usernameVariable: 'SSH_USERNAME'
          ),
          string(credentialsId: 'JIRA_CONSUMER_KEY', variable: 'JIRA_CONSUMER_KEY'),
          sshUserPrivateKey(
                  credentialsId: 'JIRA_PRIVATE_KEY',
                  keyFileVariable: 'JIRA_PEM_PATH',
                  usernameVariable: 'JIRA_USERNAME'
          ),
          usernamePassword(
                  credentialsId: 'JIRA_ACCESS_TOKEN',
                  usernameVariable: 'JIRA_TOKEN',
                  passwordVariable: 'JIRA_SECRET'
          ),
          usernamePassword(
            credentialsId: 'npm-api-credentials',
            usernameVariable: 'NPM_USERNAME',
            passwordVariable: 'NPM_TOKEN'
          ),
          usernamePassword(
            credentialsId: '2ad9702c-4312-4a72-a0f7-f3b5686db9b5',
            usernameVariable: 'SLACK_USERNAME',
            passwordVariable: 'SLACK_WEBHOOK'
          )
        ]) {
          sh './docker/release'
        }
      }
    }
  }
  post {
    failure {
      script {
        slackSend channel: "#uidev_rollcall", message: "<${env.BUILD_URL}|${env.JOB_NAME} ${env.BUILD_NUMBER} Failed>."
      }
    }
  }
}
