{"version":3,"file":"wtf-plugin-disambig.js","sources":["../src/index.js"],"sourcesContent":["// const birthDate = require('./birthDate')\nconst shouldSkip = /see also/\n\nfunction escapeRegExp(str) {\n  str = str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') // $& means the whole matched string\n  return new RegExp(str, 'i')\n}\n\nconst parseLine = function (line) {\n  let link = line.link(0)\n  if (!link || link.type() !== 'internal') {\n    return null\n  }\n  let desc = line.text()\n  let reg = escapeRegExp(link.text())\n  // ensure the link is toward the start of the sentence\n  let m = desc.match(reg)\n  if (!m || m.index > 20) {\n    return null\n  }\n  desc = desc.replace(reg, '')\n  desc = desc.replace(/[,:]? ?/, '')\n  return {\n    link: link.page(),\n    desc: desc,\n  }\n}\n\n// A '''[[berry]]''' is a small, pulpy and often edible fruit in non-technical language.\nconst getMain = function (s) {\n  let txt = s.text().slice(0, 120)\n  if (!txt.match(/ is /)) {\n    return null\n  }\n  let link = s.link(0)\n  if (!link) {\n    return null\n  }\n  let reg = escapeRegExp(link.text())\n  // ensure the link is toward the start of the sentence\n  let m = txt.match(reg)\n  if (!m || m.index > 20) {\n    return null\n  }\n  return link.page()\n}\n\nconst getTitle = function (doc) {\n  let title = doc.title() || ''\n  title = title.replace(/ \\(disambig|disambiguation\\)$/, '')\n  return title\n}\n\nconst addMethod = function (models) {\n  // parse a disambiguation page into an array of pages\n  models.Doc.prototype.disambiguation = function () {\n    if (this.isDisambiguation() !== true) {\n      return null\n    }\n    // remove 'see also'\n    let sec = this.section('see also')\n    if (sec !== null) {\n      sec.remove()\n    }\n    let intro = this.section().sentence()\n    let main = getMain(intro)\n\n    let pages = []\n    this.sections().forEach((s) => {\n      let title = s.title()\n      if (shouldSkip.test(title) === true) {\n        return\n      }\n      s.lists().forEach((list) => {\n        list.lines().forEach((line) => {\n          let found = parseLine(line)\n          if (found) {\n            found.section = title\n            pages.push(found)\n          }\n        })\n      })\n    })\n    return {\n      text: getTitle(this),\n      main: main,\n      pages: pages,\n    }\n  }\n  // alias\n  models.Doc.prototype.disambig = models.Doc.prototype.disambiguation\n}\nmodule.exports = addMethod\n"],"names":["shouldSkip","escapeRegExp","str","replace","RegExp","parseLine","line","link","type","desc","text","reg","m","match","index","page","getMain","s","txt","slice","getTitle","doc","title","addMethod","models","Doc","prototype","disambiguation","isDisambiguation","sec","section","remove","intro","sentence","main","pages","sections","forEach","test","lists","list","lines","found","push","disambig"],"mappings":"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"}