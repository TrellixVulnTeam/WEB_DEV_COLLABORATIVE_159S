{"version":3,"file":"wtf-plugin-html.js","sources":["../src/01-doc.js","../src/02-section.js","../src/03-paragraph.js","../src/_lib/smartReplace.js","../src/04-sentence.js","../src/05-link.js","../src/infobox.js","../src/image.js","../src/list.js","../src/reference.js","../src/table.js","../src/index.js"],"sourcesContent":["const defaults = {\r\n  title: true,\r\n  infoboxes: true,\r\n  headers: true,\r\n  sections: true,\r\n  links: true\r\n}\r\n// we should try to make this look like the wikipedia does, i guess.\r\nconst softRedirect = function(doc) {\r\n  let link = doc.redirectTo()\r\n  let href = link.page\r\n  href = './' + href.replace(/ /g, '_')\r\n  if (link.anchor) {\r\n    href += '#' + link.anchor\r\n  }\r\n  return `  <div class=\"redirect\">\r\n  ↳ <a class=\"link\" href=\"./${href}\">${link.text}</a>\r\n  </div>`\r\n}\r\n\r\n//turn a Doc object into a HTML string\r\nconst toHtml = function(options) {\r\n  options = Object.assign({}, defaults, options)\r\n  let data = this.data\r\n  let html = ''\r\n  //add page title\r\n  if (options.title === true && data.title) {\r\n    html += '<title>' + data.title + '</title>\\n'\r\n  }\r\n  //if it's a redirect page, give it a 'soft landing':\r\n  if (this.isRedirect() === true) {\r\n    html += softRedirect(this)\r\n    return html\r\n  }\r\n  //render infoboxes (up at the top)\r\n  if (options.infoboxes === true) {\r\n    html += this.infoboxes()\r\n      .map(i => i.html(options))\r\n      .join('\\n')\r\n  }\r\n  //render each section\r\n  if (options.sections === true || options.paragraphs === true || options.sentences === true) {\r\n    html += data.sections.map(s => s.html(options)).join('\\n')\r\n  }\r\n  //default off\r\n  if (options.references === true) {\r\n    html += '<h2>References</h2>'\r\n    html += this.references()\r\n      .map(c => c.html(options))\r\n      .join('\\n')\r\n  }\r\n  return html\r\n}\r\nmodule.exports = toHtml\r\n","const defaults = {\r\n  headers: true,\r\n  images: true,\r\n  tables: true,\r\n  lists: true,\r\n  paragraphs: true\r\n}\r\nconst doSection = function(options) {\r\n  options = Object.assign({}, defaults, options)\r\n  let html = ''\r\n  //make the header\r\n  if (options.headers === true && this.title()) {\r\n    let num = 1 + this.depth\r\n    html += '  <h' + num + '>' + this.title() + '</h' + num + '>'\r\n    html += '\\n'\r\n  }\r\n  //put any images under the header\r\n  if (options.images === true) {\r\n    let imgs = this.images()\r\n    if (imgs.length > 0) {\r\n      html += imgs.map(image => image.html(options)).join('\\n')\r\n    }\r\n  }\r\n  //make a html table\r\n  if (options.tables === true) {\r\n    html += this.tables()\r\n      .map(t => t.html(options))\r\n      .join('\\n')\r\n  }\r\n  // //make a html bullet-list\r\n  if (options.lists === true) {\r\n    html += this.lists()\r\n      .map(list => list.html(options))\r\n      .join('\\n')\r\n  }\r\n  //finally, write the sentence text.\r\n  if (options.paragraphs === true && this.paragraphs().length > 0) {\r\n    html += '  <div class=\"text\">\\n'\r\n    this.paragraphs().forEach(p => {\r\n      html += '    <p class=\"paragraph\">\\n'\r\n      html +=\r\n        '      ' +\r\n        p\r\n          .sentences()\r\n          .map(s => s.html(options))\r\n          .join(' ')\r\n      html += '\\n    </p>\\n'\r\n    })\r\n    html += '  </div>\\n'\r\n  } else if (options.sentences === true) {\r\n    html +=\r\n      '      ' +\r\n      this.sentences()\r\n        .map(s => s.html(options))\r\n        .join(' ')\r\n  }\r\n  return '<div class=\"section\">\\n' + html + '</div>\\n'\r\n}\r\nmodule.exports = doSection\r\n","const defaults = {\r\n  sentences: true\r\n}\r\n\r\nconst toHtml = function(options) {\r\n  options = Object.assign({}, defaults, options)\r\n  let html = ''\r\n  if (options.sentences === true) {\r\n    html += this.sentences()\r\n      .map(s => s.html(options))\r\n      .join('\\n')\r\n  }\r\n  return html\r\n}\r\nmodule.exports = toHtml\r\n","//escape a string like 'fun*2.Co' for a regExpr\r\nfunction escapeRegExp(str) {\r\n  return str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&')\r\n}\r\n\r\n//sometimes text-replacements can be ambiguous - words used multiple times..\r\nconst smartReplace = function(all, text, result) {\r\n  if (!text || !all) {\r\n    return all\r\n  }\r\n\r\n  if (typeof all === 'number') {\r\n    all = String(all)\r\n  }\r\n  text = escapeRegExp(text)\r\n  //try a word-boundary replace\r\n  let reg = new RegExp('\\\\b' + text + '\\\\b')\r\n  if (reg.test(all) === true) {\r\n    all = all.replace(reg, result)\r\n  } else {\r\n    //otherwise, fall-back to a much messier, dangerous replacement\r\n    // console.warn('missing \\'' + text + '\\'');\r\n    all = all.replace(text, result)\r\n  }\r\n  return all\r\n}\r\n\r\nmodule.exports = smartReplace\r\n","const smartReplace = require('./_lib/smartReplace')\r\n\r\nconst defaults = {\r\n  links: true,\r\n  formatting: true\r\n}\r\n// create links, bold, italic in html\r\nconst doSentence = function(options) {\r\n  options = Object.assign({}, defaults, options)\r\n  let text = this.text()\r\n  //turn links into <a href>\r\n  if (options.links === true) {\r\n    this.links().forEach(link => {\r\n      let str = link.text() || link.page()\r\n      let tag = link.html()\r\n      text = smartReplace(text, str, tag)\r\n    })\r\n  }\r\n  if (options.formatting === true) {\r\n    //support bolds\r\n    this.bold().forEach(str => {\r\n      let tag = '<b>' + str + '</b>'\r\n      text = smartReplace(text, str, tag)\r\n    })\r\n    //do italics\r\n    this.italic().forEach(str => {\r\n      let tag = '<i>' + str + '</i>'\r\n      text = smartReplace(text, str, tag)\r\n    })\r\n  }\r\n  return '<span class=\"sentence\">' + text + '</span>'\r\n}\r\nmodule.exports = doSentence\r\n","const toHtml = function() {\r\n  let classNames = 'link'\r\n  let href = this.href()\r\n  href = href.replace(/ /g, '_')\r\n  let str = this.text() || this.page()\r\n  return `<a class=\"${classNames}\" href=\"${href}\">${str}</a>`\r\n}\r\nmodule.exports = toHtml\r\n","const defaults = {\r\n  images: true\r\n}\r\nconst dontDo = {\r\n  image: true,\r\n  caption: true,\r\n  alt: true,\r\n  signature: true,\r\n  'signature alt': true\r\n}\r\n\r\n//\r\nconst infobox = function(options) {\r\n  options = Object.assign({}, defaults, options)\r\n  let html = '<table class=\"infobox\">\\n'\r\n  html += '  <thead>\\n'\r\n  html += '  </thead>\\n'\r\n  html += '  <tbody>\\n'\r\n  //put image and caption on the top\r\n  if (options.images === true && this.data.image) {\r\n    html += '    <tr>\\n'\r\n    html += '       <td colspan=\"2\" style=\"text-align:center\">\\n'\r\n    html += '       ' + this.image().html() + '\\n'\r\n    html += '       </td>\\n'\r\n    if (this.data.caption || this.data.alt) {\r\n      let caption = this.data.caption\r\n        ? this.data.caption.html(options)\r\n        : this.data.alt.html(options)\r\n      html += '       <td colspan=\"2\" style=\"text-align:center\">\\n'\r\n      html += '         ' + caption + '\\n'\r\n      html += '       </td>\\n'\r\n    }\r\n    html += '    </tr>\\n'\r\n  }\r\n  Object.keys(this.data).forEach(k => {\r\n    if (dontDo[k] === true) {\r\n      return\r\n    }\r\n    let s = this.data[k]\r\n    let key = k.replace(/_/g, ' ')\r\n    key = key.charAt(0).toUpperCase() + key.substring(1) //titlecase it\r\n    let val = s.html(options)\r\n    html += '    <tr>\\n'\r\n    html += '      <td>' + key + '</td>\\n'\r\n    html += '      <td>' + val + '</td>\\n'\r\n    html += '    </tr>\\n'\r\n  })\r\n  html += '  </tbody>\\n'\r\n  html += '</table>\\n'\r\n  return html\r\n}\r\nmodule.exports = infobox\r\n","const makeImage = function() {\r\n  return '  <img src=\"' + this.thumbnail() + '\" alt=\"' + this.alt() + '\"/>'\r\n}\r\nmodule.exports = makeImage\r\n","//\r\nconst toHtml = function(options) {\r\n  let html = '  <ul class=\"list\">\\n'\r\n  this.lines().forEach(s => {\r\n    html += '    <li>' + s.html(options) + '</li>\\n'\r\n  })\r\n  html += '  </ul>\\n'\r\n  return html\r\n}\r\nmodule.exports = toHtml\r\n","//\r\nconst toHtml = function(options) {\r\n  if (this.data && this.data.url && this.data.title) {\r\n    let str = this.data.title\r\n    if (options.links === true) {\r\n      str = `<a href=\"${this.data.url}\">${str}</a>`\r\n    }\r\n    return `<div class=\"reference\">⌃ ${str} </div>`\r\n  }\r\n  if (this.data.encyclopedia) {\r\n    return `<div class=\"reference\">⌃ ${this.data.encyclopedia}</div>`\r\n  }\r\n  if (this.data.title) {\r\n    //cite book, etc\r\n    let str = this.data.title\r\n    if (this.data.author) {\r\n      str += this.data.author\r\n    }\r\n    if (this.data.first && this.data.last) {\r\n      str += this.data.first + ' ' + this.data.last\r\n    }\r\n    return `<div class=\"reference\">⌃ ${str}</div>`\r\n  }\r\n  if (this.inline) {\r\n    return `<div class=\"reference\">⌃ ${this.inline.html()}</div>`\r\n  }\r\n  return ''\r\n}\r\nmodule.exports = toHtml\r\n","//turn a json table into a html table\r\nconst toHtml = function (options) {\r\n  let rows = this.data\r\n  let html = '<table class=\"table\">\\n'\r\n  //make header\r\n  html += '  <thead>\\n'\r\n  html += '  <tr>\\n'\r\n\r\n  Object.keys(rows[0]).forEach((k) => {\r\n    if (/^col[0-9]/.test(k) !== true) {\r\n      html += '    <td>' + k + '</td>\\n'\r\n    }\r\n  })\r\n  html += '  </tr>\\n'\r\n  html += '  </thead>\\n'\r\n  html += '  <tbody>\\n'\r\n\r\n  //make rows\r\n  rows.forEach((o) => {\r\n    html += '  <tr>\\n'\r\n    Object.keys(o).forEach((k) => {\r\n      let val = o[k].html(options)\r\n      html += '    <td>' + val + '</td>\\n'\r\n    })\r\n    html += '  </tr>\\n'\r\n  })\r\n  html += '  </tbody>\\n'\r\n  html += '</table>\\n'\r\n  return html\r\n}\r\nmodule.exports = toHtml\r\n","const doc = require('./01-doc')\r\nconst section = require('./02-section')\r\nconst paragraph = require('./03-paragraph')\r\nconst sentence = require('./04-sentence')\r\nconst link = require('./05-link')\r\nconst infobox = require('./infobox')\r\nconst image = require('./image')\r\nconst list = require('./list')\r\nconst reference = require('./reference')\r\nconst table = require('./table')\r\n\r\nconst plugin = function(models) {\r\n  models.Doc.prototype.html = doc\r\n\r\n  models.Section.prototype.html = section\r\n\r\n  models.Paragraph.prototype.html = paragraph\r\n\r\n  models.Sentence.prototype.html = sentence\r\n\r\n  models.Image.prototype.html = image\r\n\r\n  models.Infobox.prototype.html = infobox\r\n\r\n  models.Link.prototype.html = link\r\n\r\n  models.List.prototype.html = list\r\n\r\n  models.Reference.prototype.html = reference\r\n\r\n  models.Table.prototype.html = table\r\n\r\n  // models.Template.html = function(opts) {}\r\n}\r\nmodule.exports = plugin\r\n"],"names":["defaults","title","infoboxes","headers","sections","links","softRedirect","doc","link","redirectTo","href","page","replace","anchor","text","toHtml","options","Object","assign","data","html","isRedirect","map","i","join","paragraphs","sentences","s","references","c","images","tables","lists","doSection","num","depth","imgs","length","image","t","list","forEach","p","escapeRegExp","str","smartReplace","all","result","String","reg","RegExp","test","formatting","doSentence","tag","bold","italic","classNames","dontDo","caption","alt","signature","infobox","keys","k","key","charAt","toUpperCase","substring","val","makeImage","thumbnail","lines","url","encyclopedia","author","first","last","inline","rows","o","plugin","models","Doc","prototype","Section","section","Paragraph","paragraph","Sentence","sentence","Image","Infobox","Link","List","Reference","reference","Table","table"],"mappings":"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"}