[00:00:00]
>> Brian Holt: Congratulations all of you that survived Flow, React and Redux for the past couple of days. Really excited to be back here and we'll gonna be chatting about more on Redux today. And some more advanced news cases like service rendering, code splitting and believe me we'll talk about like a little bit of Preact.

[00:00:20]
So cool, hopefully we're able to pull down the latest branch. This branch is gonna be V3-21, that's currently available at Get Hop! So kinda recap where we were and I guess before we exert is there any questions that they wanna ask?
>> Speaker 2: There is a question before we broke last night, about the MobX versus Redux.

[00:00:54]

>> Brian Holt: Yeah, which is a great question. So there's a library called MobX, and inevitably when talking about Redux, MobX usually gets brought up. It fulfills the same use cases Redux it is a centralized state repository for your entire application. And you would use MobX in the same situation that you would use Redux.

[00:01:19]
Similar how you wouldn't use Redux and MobX together just like you wouldn't use Ember and Angular together, same sort of idea here. MobX is a really cool piece of technology that relies on some more new types of technologies, and it's really fun to play with. It's very powerful, you can achieve some pretty cool patterns.

[00:01:39]
They rely heavily on things called computed properties, which end up being really cool. But again, I kinda prefer my technologies to be as simple as possible, which is why I do enjoy Redux. It's pretty again, [COUGH] you just have this reducer cycle and that's really it. So for me personally, while I've toyed around with my MobX I've had a great time.

[00:02:05]
I haven't had a situation where I needed that much power from my repository or my state repository. So that's why I choose to not use it typically, but that's purely a personal call on my part. You're welcome to disagree and use it on your own as well, and that's a totally valid choice.

