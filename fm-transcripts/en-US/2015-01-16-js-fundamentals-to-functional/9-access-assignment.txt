[00:00:00]
>> [MUSIC]

[00:00:03]
>> Bianca Gandolfo: So here's some examples on how you've probably used arrays in the past. So, here we have our box. Notice the difference here is that we have the brackets and not the curly braces. And we have box and index 0 is true. So we're adding a Boolean there, right.

[00:00:22]
That's why we don't have quotes around it. Because true is a value in and of itself, it's not a string, and then at the second index, or the first index, I'm sorry, we have meow, and we can always use box.push to add something at the end, and here we are just adding an array.

[00:00:43]
I'm sorry, an object here. And then if wanted to use i, we'd probably use i before when we're using a loop, the for loop with semicolons. And you could just use i here. What do you think this is gonna equal? Can everyone see that? It's kind of small.

[00:01:01]

>> Speaker 2: True?
>> Bianca Gandolfo: True. Right, because i is gonna do a look up and it's gonna be 0, and so we can imagine that's substituted there as 0, and then that's true.
>> Bianca Gandolfo: Cool, and then, the 1 we know is what? Meow. And then, what if we box.pop? What is that gonna return?

[00:01:27]

>> Speaker 2: True.
>> Bianca Gandolfo: [CROSSTALK]
>> Bianca Gandolfo: Actually, there's a return. I think it returns the thing that you remove.
>> Bianca Gandolfo: Mm-hm. So what is it gonna return?
>> Speaker 2: {'hello' : 'goodbye'}? The object?
>> Bianca Gandolfo: Yes. It's gonna return this object.
>> Bianca Gandolfo: And then if I said, console.log(box), what is box going to look like now.

[00:02:01]
Yeah. So, what pop() does, is it takes the last thing off, it returns it and so after that, we just have two things in our array. Any questions about that?
>> Bianca Gandolfo: So we've all seen that before, right? We're using bracket notation. We're using push and pop. We're using variable i, all things that we've seen before.

[00:02:32]
Cool. So, cool. We're comfortable with that. Now let's talk about how our array is similar to our object. And so, this is just our box in the previous example. So we have box as an object, and then we change one thing. Do you guys see that change? It really settles the first line, really.

[00:02:55]
We're changing those curly brackets to square brackets. And now let's explore what this does to our data structure. So. What do we predict this is gonna do here on the second to last line?
>> Speaker 2: 9?
>> Bianca Gandolfo: 9. Anyone else?
>> Speaker 3: I think it's number five?
>> Speaker 4: Bianca?
>> Bianca Gandolfo: Mm-hm?

[00:03:30]

>> Speaker 4: There's some questions in the chat room, and I have one, too. Can you go back one slide?
>> Bianca Gandolfo: Sure.
>> Speaker 2: [COUGH]
>> Speaker 4: So, underneath box.push, if you did another, I don't know what the word for it is, but another assignment to the box Like box[3], and then you did that same box.pop at the bottom.

[00:03:50]
Would you still get what you pushed, or would you get the last thing?
>> Bianca Gandolfo: You always get the last thing. So this push would be, this would be at 2, so index 2. And then we add something to three and then if we popped it would then be the last thing.

[00:04:09]
So pop always does the last index.
>> Bianca Gandolfo: And it returns the last index and it's destructed so it takes off the last thing so that's important to note. Cool. So any other questions? Okay.
>> Speaker 2: As for that one, I think you just answered their other question but, can you then reference those different copies?

[00:04:40]
Or their actually, GS doesn't actually alter the original array, it just makes copies? It modifies those?
>> Bianca Gandolfo: I'm not sure. So, I can kind of show var x = this. So here's an array, so we x.pop.
>> Bianca Gandolfo: So it's destructive, so it actually is deleting.
>> Speaker 2: But if you were to assign like, that array x to [CROSSTALK]

[00:05:19]

>> Speaker 2: But it's passed by,
>> Bianca Gandolfo: Right, I see what you mean.
>> Speaker 2: Value in that numbers.
>> Bianca Gandolfo: In that case yeah, that is a copy. Yeah, I see what you're saying. So if you did y=x. Right, so we have y and then we say x.pop. And then we look at x.

[00:05:37]
And then we look at y. No it is the same. It is destructive.
>> [INAUDIBLE]
>> Bianca Gandolfo: Yeah, yeah. So arrays [INAUDIBLE] but, yeah, okay, cool.
>> Bianca Gandolfo: So here we go. So some people said it was undefined here, box, bracket size. Oops.
>> Bianca Gandolfo: Any other guesses? Who thinks it's gonna be 9?

[00:06:16]

>> Bianca Gandolfo: Who thinks it's gonna be undefined? Okay, a few people. Well the cool thing, and maybe the confusing thing about this is that it's actually gonna be 9 because an array is an object at it's core. That means that you can add properties to it. And you can kind of think of the array like this.

[00:06:39]
So we have an index zero called meow. Or a property zero you could even call it. And then we have size 9, so you can think of your array is really just an object that also has numerical indices. So, what's box at zero?
>> Bianca Gandolfo: What about Kim?
>> Speaker 5: Nine?

[00:07:10]

>> Bianca Gandolfo: box[0]?
>> Speaker 5: Nine?
>> Bianca Gandolfo: That's a good guess. So, that's a common confusion, that since we put size in first, that that would be in the zero place. But it actually has nothing to do with it, since our bracket notation is the same as when we look up on an object.

[00:07:32]
It's looking at that property zero, and it's gonna return as meow. Whereas size here, if we wanted to look up size, we'd just have to reference it by size.
>> Speaker 4: So how does it order it then, if your allowed to put-
>> Bianca Gandolfo: We'll get to that soon. Yeah, no problem.

[00:07:52]
Cool, is that clear? So even though size is added on first, it's not at the 0 width index. It's actually just a property on the object called size.
>> Speaker 4: And stepping back, how prevalent is this in actually coding? Somebody using an array versus an object-
>> Bianca Gandolfo: You use it indirectly.

[00:08:16]
These rules you use indirectly. Like for example, we're gonna get into it a little more. But we have different properties and methods on arrays that we use all the time. And then, it goes further when you start diving deeper into JavaScript and you start talking about prototypes and things like that It becomes really clear why it's important to understand these underlying concepts of the mechanics of the array as an object.

[00:08:43]
Mhm? Cool. Alright, what about box.size?
>> Bianca Gandolfo: 9, yeah. So the rules are the same. So we can use dot notation. We can use praco notation. Just the same as with an object.
>> Bianca Gandolfo: Yay the rules don't change! Aren't we so excited. That makes things a lot simpler, right?

[00:09:14]
Or not. Simpler? Simpler, or not simpler? Middle. Okay. Well, maybe in time you'll feel more at ease with this concept. What about, so where is the box that's size is nine? What about box size zero?
>> Bianca Gandolfo: What about Ben.
>> Speaker 6: [INAUDIBLE] That would be. You can't do that right.

[00:09:46]

>> Bianca Gandolfo: Right.
>> Speaker 6: It's
>> Bianca Gandolfo: Cuz it's a number.
>> Speaker 6: Yeah
>> Bianca Gandolfo: Yay! Good job. I usually trick people with that one.
>> Speaker 6: [INAUDIBLE] Minnesota.
>> Bianca Gandolfo: What did you say, not in Minnesota? [LAUGH] Is that where we are?
>> Speaker 6: Today.
>> Bianca Gandolfo: Today. [LAUGH] Cool.

