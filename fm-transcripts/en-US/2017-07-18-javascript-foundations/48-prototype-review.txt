[00:00:00]
>> Kyle Simpson: What is a constructor call?
>> Audience 1: It's a function call with a new key-
>> Kyle Simpson: Function call with a new info. What is this [[Prototype]] chain thing, what is it? Where does it come from?
>> Kyle Simpson: What is it?
>> Audience 1: Thunder protocol?
>> Kyle Simpson: It's a linkage from one object to another.

[00:00:25]
Where does it come from?
>> Kyle Simpson: It's created at the time the object's created, right? When an object is created it gets linked somewhere.
>> Kyle Simpson: What would you say is the most obvious effect that the prototype chain has on an object?
>> Audience 2: You can call methods of the product type.

[00:00:54]

>> Kyle Simpson: If we call property or a method on an object and it doesn't exist, what does the prototype chain do? The delegates of the chain.
>> Kyle Simpson: What are three different ways I showed you to figure out where an objects [[Prototype]] links to?
>> Audience 1: Under proto?
>> Kyle Simpson: Under proto.

[00:01:20]

>> Audience 1: Object dot gets prototype of.
>> Kyle Simpson: Object dot get prototype of.
>> Audience 1: Instructor prototype?
>> Kyle Simpson: [LAUGH] And dot constructor dot prototype. Those 3 ways.

