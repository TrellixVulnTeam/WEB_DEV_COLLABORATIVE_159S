[00:00:00]
>> Jen Kramer: Okay, so just to sort of tie everything up here, I have tongue-in-cheek called this technique the death of Bootstrap. So let's just evaluate that statement a little bit. First of all, obviously, we are limited here by browser support. Just like we all, I mean, that's the world of being a front end web developer.

[00:00:19]
And so, there are plenty [COUGH]
browsers that still are not supporting these custom properties and so forth. But we have managed to get around all of those layout problems. We can now change our columns at will, we can change our widths at will. Pretty cool for changing the ways that we're laying out webpages.

[00:00:39]
We've done it in a flexible way, so we have flexible boxes, we have flexible gaps in between them. We don't have to do a whole lot of math to change those things as we go, right? This formula, you can use again and again and again within one webpage.

[00:00:52]
You can use it across a whole bunch of different websites. That'll be a pretty cool thing to do, okay? Where is Bootstrap still going to be useful? Well, it's still going to be useful if you don't like to write all your CSS from scratch. Bootstrap makes it look kind of pretty from the beginning.

[00:01:09]
So that's still there. But Bootstrap, we have broken the paradigm of the 12 column layout. You can now have whatever columns you want. And we have reduced all of the, in Bootstrap, as we state over and over again, all the various different kinds of layouts and we stack up all the different kinds of classes to try to make it work, we've broken that as well.

[00:01:29]
We can do exactly what we wanna do wherever we wanna do it. So that's sort of why I'm calling this the death of Bootstrap, okay?
>> Jen Kramer: It's been absolutely fabulous having you all today. I am happy to take any additional questions that we might have. We have some online?

[00:01:46]
Okay.
>> Speaker 2: What book recommendations would you have?
>> Jen Kramer: What I have done is all of this has been stuff that I've read online. So I did give you a link inside of, actually, in the layout that you've been working on, is a link to this particular post. I call this Responsive Design 2.0, is my shorthand for this technique because it is completely different from the way we've approached responsive design before.

[00:02:13]
And this is some additional resources you can take a look at. They've all very much informed what I have presented for you here today. I've taken techniques from these various articles. I've combined them with other things and and created some of this stuff. So there's some reading here for you on calc, on custom properties.

[00:02:31]
Especially the Smashing magazine articles are particularly good for this, and give you examples of how this kind of thing can work. I heavily borrowed here from this responsive designs and custom properties building a flexible grid system. If you take look at that article, that's where that concept of the initial basis that we had here.

[00:02:49]
But if you read his code really quick, carefully, he actually uses borders to create a quote gap. So the gap part I wrote myself, okay? Then, we have some additional stuff here on grids, including somebody was asking earlier about grid with variables. Here's an article on that, variables plus grid.

[00:03:08]
So absolutely you can combine this technique there. There's some more things on flexbox, flexbox grid systems, and then the games that you probably already are familiar with. So feel free to go through this list. That's probably gonna be better for you than a book at this point in time.

[00:03:25]
Yes, we have another question.
>> Speaker 2: Kelly is asking, with Bootstrap there's a lot of utility classes for adding margin and padding. Here, you're kinda moving all of the concerns to the CSS. Do you think that's the future of CSS or that's-
>> Jen Kramer: Well, so remember, the technique that I presented here today, basically did the following.

[00:03:48]
We said whatever we're going to change across the media queries we put up in a CSS variable, right? Then we call that variable, we set up all of our logic in the mobile out. And then, in the media queries, we just change the values of our variables. So in something like margin, I gave you one minor example here, and I did not go back and re factor all of the other code that I could have gone back and re-factored.

[00:04:12]
The time line was too short. But you can go back and take a look at it. What is actually changing from media query to media query? So if you start with a margin at x, right, and you're gonna change it to y, set it up as a variable, change the value of the variable when you get into the media query.

[00:04:30]
So it's a technique you can apply to pretty much anything along the way. I put it here in layouts and in type because those are pretty dramatic examples of how you can really leverage this technique. But those are equally valid, so you can apply it to margins and patterns and other various things.

[00:04:51]

>> Jen Kramer: Thank you all so much for all the questions. I've enjoyed it, and I look forward to seeing what you create with this new technique. So thank you very much.
>> Audience: [APPLAUSE]

