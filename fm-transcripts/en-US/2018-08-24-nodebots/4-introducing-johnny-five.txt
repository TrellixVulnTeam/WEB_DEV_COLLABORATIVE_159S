[00:00:00]
>> Steve Kinney: The next thing, so we used the built-in Tessel library, but as I said earlier, we're using the Johnny-Five inventor's kit. So what is Johnny-Five? Johnny-Five is a really cool project that is effectively an abstraction over a number of different boards. So you can write Johnny-Five code, different boards have different ports and stuff along those lines.

[00:00:24]
It basically allows you to work with an Arduino, or a Tessel, or a Raspberry Pi, or any different device that you might have. As we work today, some of the specifics will be the different pins that we're using. But theoretically, if you had a different device at home.and you just wanted to match it to different pins, you could run the same code cuz an abstraction over all of that.

[00:00:48]
There's also a lot of really useful helper methods. There we were like we had Tessel.led, which because we were using array indices, we could see that was an array, or find the right one. Johnny-Five just gives us a whole bunch of really useful helper methods that make it really easy to do really cool things with our hardware.

[00:01:07]
And because it's nice and agnostic to the actual device that we're using, it makes it easy to port. Again, you might have to change some pins, but generally speaking, you can take code and run it on different devices cuz it handles all of that under the hood. A nice way to think about it is, you think about like JQuery, which used to take all the different browser Inconsistencies or differences and abstract over them.

[00:01:32]
So you could write JQuery code and it will run in Internet Explorer or Firefox or whatever, and it's a very similar concept. It's got, like I said before, a lot of really, really great helpers. We're gonna do an access, we're actually going to start plugging stuff into those GPIO ports.

[00:01:50]
And the very first thing we're going to do is take one of our own LEDs and actually plug it in and make it blink instead of the built-in ones.

