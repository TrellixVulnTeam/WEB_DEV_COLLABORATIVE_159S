[00:00:00]
>> Mike North: Before we get into the code, I wanna talk a little bit about editions. So I'm not here telling you about Ember 4.0 or 5.0. This course is titled Ember Octane. And part of the reason we have editions is unlike a lot of software you're used to consuming, Ember's major releases are really boring.

[00:00:22]
All we do in a major releases is we strip out old code that's been deprecated, and warning you that it's disappearing for awhile. And we dropped support for legacy browsers. We never, ever introduce new features in a major release. And this is part of our commitment to stability.

[00:00:41]
We want people to be able to get over that threshold and not worry about these new features potentially causing problems. And increasing the complexity of getting over that threshold and making that transition. But this deprives us of the ability to trump it at those major release numbers. That everything's changed, and these are the new things that you can do.

[00:01:05]
We don't really have those big milestones. And in the beginning of the class, when we're going around and introducing ourselves, somebody pointed out that it's kinda hard to know when we want to look at our app. And decide whether it is the right time to upgrade. Every six weeks we get a minor release and a new feature or two will have landed, and that's a pretty regular cadence.

[00:01:32]
Too regular you might say, to be constantly re-evaluating whether you need to go and take another look. So this is the way editions work and the way they kind of give us a clearer signal. We begin by setting goals and then over a period of time we do some work.

[00:01:49]
And we often will land this work in stable releases. We just won't update the docs. I won't come out and film a new version of the video course until the edition completes. Once it completes, then we know that's the signal that we should all look in, the last piece of a larger puzzle has dropped.

[00:02:10]
And now we can sort of shift to something big, something new and exciting. So Octane is the first manifestation of an edition. But we're gonna be repeating this process over and over.
>> Mike North: So, in terms of Octane's goals, it emphasizes modern productivity and performance. And that modern productivity to us means, modern JavaScript syntax.

[00:02:40]
So until now Ember has not been officially compatible with native JavaScript classes, but now it is. And in addition to this, we have a new component model that is dramatically simpler. I think it's 90% simpler than what people are used to having to work with for a couple reasons.

[00:03:00]
But we're gonna see that they're almost like 3 or 4 things you have to remember instead of 30 or 40. Performance-wise we have shrunk the size of the hello world app. And one of the ways we've done this is we've made jQuery optional, right? We don't need to support IE8 anymore, that was the main motivation for including jQuery.

[00:03:24]
So in addition to that we've made investments in tree-shaking which allows you to discard any parts of libraries that you do not use.

