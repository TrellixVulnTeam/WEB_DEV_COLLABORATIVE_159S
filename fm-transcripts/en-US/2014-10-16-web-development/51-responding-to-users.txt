[00:00:00]
>> [MUSIC]

[00:00:03]
>> Male Student 1: What happens if you give the text function we've written an argument? Will it be called or will jQuery text function be called?
>> Brian Holt: Say that one more time.
>> Male Student 1: What happens if we give the text function we've written an argument? Will it be called or will the jQuery text function be called?

[00:00:22]
I guess, [INAUDIBLE].
>> Brian Holt: Okay. So this is kind of talking about overloading a method. It doesn't exist in JavaScript.
>> Brian Holt: So the answer is, if you call text with no parameters versus one parameter, versus two parameters it's not like Java will actually refer to a different method. It all refers to the same method.

[00:00:52]
And it's up to your JavaScript that you write to deal with those different parameters.
>> Brian Holt: Here we're now actually going to leverage those anonymous functions that we were talking about. Something that happens, sorry. Go ahead.
>> Male Student 1: Now I think they're saying, what if you even just did find your own function called text.

[00:01:20]

>> Male Student 1: Object.text versus dollar sign dot text. If you created your own object and had a text method on that.
>> Brian Holt: Which you want to call?
>> Male Student 1: Right.
>> Brian Holt: I guest it depends if it's a jQuery object, if it is a jQuery object you can't overwrite your text method and then call your own.

[00:01:45]
That is a possibility.
>> Male Student 1: But if it was a completely separate object it would be calling your implementation.
>> Brian Holt: Calling your implementation. So jQuery only modifies it's own objects. It doesn't actually go and override other things objects or methods or whatever. Does that address it?
>> Male Student 1: I'll check here.

[00:02:05]

>> Brian Holt: Okay, let's talk about pressing buttons, right. It's a common practice that you'll press a button on a website. And it'll do something, right. So you want to have that ability to react to user inputs. So in this particular case, we have a button right here. So button class="alert-btn".

[00:02:27]
It says click me on it. So now that we click it, it's gonna say, hey there.
>> Brian Holt: Let's talk about how we did that. Let's just make this a lot bigger here.
>> Brian Holt: Okay, we grab alert button here. This should look familiar from what we were doing last time.

[00:02:50]
And then there is a thing called the .click function. That's essentially saying, every time my button gets clicked, run this function. So again, I can click it again and again, and again, and again it happens every single time. So what's actually happening here in JavaScript or at least in the dom which is the document object model, we talked a little about that.

[00:03:17]
There is a thing called an event, so every time I click on this, whether or not I'm listening for the event, it happens, right. Like JavaScript, like I'm clicking right here in the body. JavaScript is throwing off all of these events for me clicking on the body and just nothing is happening because no one is listening right.

[00:03:36]
It's kind of those things like a tree falls in the forest kind of problem, right. So in this particular case, when we say, call this .click function the tree is falling in the forest and we're listening, so it does make a sound.
>> Brian Holt: So yeah, when call the click function, it is essentially saying I want to be notified when this event happens and I want you to run this block of code.

[00:04:03]
All right, so here I'm saying, alert("Hey there!"), so every time this is clicked it calls hey there. That kinda make sense? There's lots of events in JavaScript [COUGH]. Click is just happens to be one of the most commonly used one, right. Because that's usually a direct sign of user interaction with your website than when they click on something, they expect something to happen.

[00:04:26]
So you should be listening for it.
>> Brian Holt: Questions about this?
>> Male Student 2: That single click event or the action of clicking on that button. Actually, created a whole stream of events, correct. It's just that we're listening for the alert button click.
>> Brian Holt: Yeah.
>> Male Student 2: Cuz there's actually a click in the context of the browser window as well.

[00:04:53]

>> Brian Holt: Right. Definitely.
>> Male Student 1: I didn't catch all that. It might have addressed that, but they're asking, can you explain more on how events are set up in the DOM and how it exactly listens.
>> Brian Holt: The question is always how much depth to go into.
>> Brian Holt: I'm gonna one defer to the other jQuery class with Carl.

[00:05:22]
I'm sure he touches on it much more than then I should. But essentially every time that you press a key, you click on something, you move your mouse, your mouse enters something, your mouse leaves something. You push down the mouse button, you let up the mouse button, you click the button, you double click the button.

[00:05:44]
Those are all different events that the browser will fire. And essentially, the browser does is it says, hey, an event happened here and then it kinda just bubbles up and different things. So you can have multiple things listening for example. If I say, (' .alert-btn').click, I mean this is contrived.

[00:06:09]
You really would just put it up here, but let's just, I can spell function.
>> Brian Holt: And we'll say like.
>> Brian Holt: $('alert-btn').text('changed'), right.
>> Brian Holt: Hope yeah, period right there. Okay, so what I'm trying to demonstrate here is, like these events bubble up, and there can be many people listening for these events.

[00:07:01]
Essentially the browser says, like hey this happened in the browser. And like everything all your listeners can say, like we don't care. Like go pound sand or whatever. Or they can say like, okay that happened I care, I'm gonna fire off my code now.
>> Brian Holt: So in this particular case alert-btn now has two different event listeners that are gonna do different things based on those events.

[00:07:29]

>> Male Student 2: So just declaring that jQuery function call registers the event. There's no sequencing, or no positioning dependency variable.
>> Brian Holt: It's really that simple.
>> Brian Holt: And again that's why we are going over jQuery, it makes things like this just deadly simple.
>> Male Student 2: They are just asking if the onclick and setting that to a function do it in HTML?

[00:07:55]
Is that the same thing we're doing here, it's just jQuery's taking care of it?
>> Brian Holt: It amounts to be the same thing. That's a really bad way to do it. You do not wanna put your JavaScript into your HTML. It's just, it's the worst thing you can do for yourself.

[00:08:11]
Like stick to this. Now if you want to ask me, can you do it in raw JavaScript without jQuery? That's fine, you can totally do it that way and just not use jQuery at all.
>> Male Student 2: What if you wanted to reference something that didn't have a tag, or maybe does have a tag but you don't know what it is.

[00:08:30]
Like you wanted to change the nav bar on the browser. Or you wanted to do some other device?
>> Brian Holt: You need some way to get at it. Whether that's a class, that's an ID, it's a tag name, you can't get at something if you don't know what it is.

[00:08:47]
So it can be defined dynamically, right. Like I could have like.
>> Brian Holt: Var button, right. And that's equal to this and I can say, right there button and here button as well. So that can be filled in later dynamically, right. But you still have to give it some indication like this is what I'm listening for, right.

[00:09:17]
You can even get super annoying and say, like body, right. So any time the body is clicked, it's gonna get really annoying with me.
>> Brian Holt: Don't even have to click on the body anymore. Oops, this page. So again, that can be changed it can be dynamic, right. But.

[00:09:43]

>> Male Student 2: So it's only things that are in the dom, not anything that's outside in the browser itself?
>> Brian Holt: Okay, so you can create synthetic events, right. Like that's possible like the browser generates a bunch of really useful events. But you're talking about outside the window.
>> Male Student 2: Outside of the DOM.

[00:10:01]
So if you wanted to modify, there's websites you go to that open additional tabs, or things like that that are outside of the context of the DOM.
>> Brian Holt: So your tab is pretty well sandboxed. For example, my codepen tap, cannot listen to my Google. That's a huge privacy implication, right.

[00:10:21]
You don't want other people listening on what you're doing. So you are confine to your webpage, whatever that is. There's minor exceptions to it but I won't worry about it. You can only listen to your own stuff, that's the bottom line.
>> Male Student 2: What if about things, like if you were writing an app for like a mobile device where you're looking for tilt angle like an accelerometer or something like that?

[00:10:46]
And how would you reference that event?
>> Brian Holt: So the short answer to that is, a lot of that can't be done in the browser. You have to drop into a mobile app, where you actually have access to those APIs.
>> Male Student 1: Isn't there accelerometer API.
>> Brian Holt: I think there is but I've never used it.

[00:11:05]
So I'm not [INAUDIBLE].
>> Male Student 1: [INAUDIBLE] Device orientation. It's called device orientation API.
>> Male Student 2: Does GPS.
>> Male Student 1: Right. Yeah. [CROSSTALK] To get the way that the API works.
>> Brian Holt: That one exists.
>> Male Student 1: You ask giant permission to see location and then user clicks yes, and then you get a location out there.

[00:11:30]
And so it's called the view location API.
>> Brian Holt: Yeah, some of it does exist. But yeah.
>> Male Student 1: Some that's to discuss in the intro to HTML 5, and this three course [INAUDIBLE].
>> Brian Holt: Good question for sure.
>> Female Student 1: So there's a question of mine. Somebody is asking, so you can define it like this bar dollar sign element with no parentheses equals $ element with parenthesis.

[00:12:02]
I'm not sure if that makes sense.
>> Female Student 1: $ var $ element is not really used in jQuery.
>> Brian Holt: Yeah.
>> Male Student 1: Are you talking about storing a reference to the jQuery object? I think yeah, so saying dollar sign button and wrapping that in a jQuery and then calling $(button).click.

[00:12:41]

>> Male Student 1: Put a dollar sign in front of my button.
>> Brian Holt: Okay.
>> Male Student 1: To show that it's a jQuery object.
>> Brian Holt: Something like that is also possible. You can store a reference to these jQuery dom] notes, also totally works.
>> Female Student 1: You said it was really more of a statement?

[00:13:00]

>> Brian Holt: Yeah. Yeah, this is a useful pattern as well. So particularly if you can reference it a bunch of times. Every time you do this, this dollar sign, it does a look up on the dom. While it's quite fast, it's not free. So if you're gonna reference it a bunch of times, it's a good idea to store it and then call those functions like that.

