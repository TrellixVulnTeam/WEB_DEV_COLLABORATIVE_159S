[00:00:00]
>> [MUSIC]

[00:00:04]
>> Brian Holt: This one's from, I'm sorry if I'm saying your name wrong, Siyu? S-I-Y-U? So this is the one that he sent in. This is a really, really common problem that you're gonna run in to all time as web developer. It's not, in fact, you guys saw me do it.

[00:00:19]
Just like five minutes ago. Not getting all the proper names right or the nesting levels correct. That was his problem. He just needed an extra data right here, right, cuz you have to go inside of the entire data object and into the data object. Right, that's why I changed this to be response as well as this one.

[00:00:37]
This makes it a little bit more clear, right, this is the response object and inside of the response object I'm going into the data one. He also doesn't need this jasonp. So let's just get rid of that. That wouldn't hurt anything. It just wouldn't do anything. So I think now, yeah, his should work because of that.

[00:00:58]

>> Brian Holt: So we'll leave this page. And this is what I was looking at for Elizabeth. Elizabeth W, if I recall correctly. She is essentially all there, but if you look here in the console, which by the way is your best friend, it's telling me that there is an unexpected end parenthesis somewhere.

[00:01:21]
I haven't found it yet, but it's in there somewhere. And usually they'll give you a nice, in fact, I wonder if I can look at it
>> Brian Holt: Right there. After the text out of pend photo, it's not expecting this parenthesis right there,
>> Brian Holt: I don't think you need that as well so let's try that.

[00:01:52]
So that apparently hasn't worked. Let's go back to our console. Unexpected end of input so let's check that out.
>> Brian Holt: As you can see, the console is going to be really useful because when you have errors it is gonna output the errors to the console. As you can see here though it is still a syntax error.

[00:02:13]
I just haven't quite figured out what it is yet. Okay, so we have the AJAX just start reforming some of this. I'm gonna talk about data here in just a sec. But for the second just bear with me.
>> Brian Holt: Something else Elizabeth had is that your search parameters do have to be inside of data if you're gonna split them out like she had.

[00:02:48]
Another word of caution we give you is, in JSON they expect commas. So if I had type GET here, and I omit the comma, the whole world ends, actually. So I mean, it's goes down in a fiery blaze of glory. So you need commas to separate different property values.

[00:03:07]

>> Female Student 1: I think there's a missing curly brace in the for.
>> Brian Holt: Let's see, let's indent this so I can actually see what's going on. So this one is matched up to that one, right success is matched up to this one. And this one is matched up to Ajax, right.

[00:03:29]
Not Ajax, the anonymous function.
>> Brian Holt: So which one is this one matched up to? It's not, so another issue as you might be seeing here is like, matching parentheses, matching curly brackets, matching square brackets, it's very important that you get into good habits or else you run into problems like these, that you feel like are really dumb problems but in reality, JavaScript can't read your file unless it has correct curly braces.

[00:04:17]
Lets put this back on this line.
>> Brian Holt: And pack this down a little bit. So that's the Ajax object. The Ajax object ends there.
>> Brian Holt: Okay and then I might need another curly brace right there to match With the function, and I need one for the click, which would be like that.

[00:04:55]

>> Brian Holt: Still unexpected end of input, oops.
>> Brian Holt: Nope, okay.
>> Brian Holt: Okay.
>> Brian Holt: So, function there. That one closes there, this one closes there. If you can't see what I'm doing, you can see when I click on this curly brace right here it has an underline right there of the one that the computer thinks it matches up to.

[00:05:54]
That's exactly what I'm doing right now to try and figure out where everything thinks that it should be ending. There's the click button. So those should all be matched now from what I can see.
>> Male Student 1: Is there anything above or below?
>> Brian Holt: I don't see it.
>> Male Student 1: Success is a.

[00:06:26]

>> Male Student 1: Yeah.
>> Brian Holt: All right so my next step on a lot of these is just to start commenting out blocks of code and then you can start figuring out what's wrong. All right so let's just comment all of that out. What I've done there is, sorry I don't know the Windows one but it's Command-/ and that'll comment out whatever you have selected.

[00:06:54]
Now this code no longer has any effect. It gives you the ability to figure out what is going wrong.
>> Male Student 1: On video of this 20 degree portion.
>> Brian Holt: Cool, so that means something in this commented code is wrong.
>> Male Student 1: Did you try to cancel logarithm inside it?
>> Brian Holt: Yeah, let's just alert here, okay.

[00:07:26]

>> Male Student 1: I guess it went back to replacement so.
>> Brian Holt: So now we know for a fact that something is wrong with this block of code. So we are kind of narrowing it down to where the problems could be. So you have to take a look at our for loop here.

[00:07:48]
Well even this we can just like comment it. Comment out the for loop body and see if it's a problem with our for loop. Then say open back up our console.
>> Brian Holt: Okay, so it looks like it's something in our console body.
>> Brian Holt: Okay, so it's something here.

[00:08:22]
So we have img src there plus response.data.children plus that-
>> Male Student 1: Why is there slash before img?
>> Brian Holt: There shouldn't be.
>> Brian Holt: At least now we're getting somewhere. Now it's not crashing. We're just not getting the actual images.
>> Brian Holt: So, we will now have response.data.children and she did the exact same thing I did, she forgot data.

[00:08:52]

>> Brian Holt: Puppies.
>> Class: [LAUGH]
>> Brian Holt: Talk about the best consolation prize, right?
>> Class: [LAUGH]
>> Brian Holt: It's, [LAUGH] you fix the code, and now you have puppies.
>> Class: [LAUGH]
>> Brian Holt: Okay so hopefully that was an interesting exercise in debugging for you. It's a difficult skill to learn and it's one that you don't want to develop but you have to develop so.

[00:09:15]

>> Male Student 1: Sometimes it's a majority of your time when you're working on existing code.
>> Brian Holt: I'll spend whole days, not writing code and just fixing bugs. Actually, I'd say recently, that's been the case a lot. So, hopefully that was good for you guys, hopefully somewhat useful. I was going to talk a little bit about data.

[00:09:35]
So, you remember how I had like the question mark Q equals. JQuery has a nice little helper for that.
>> Brian Holt: That's weird, okay. It called data and so they will just dynamically make that for you. So instead of having ?q = puppy and sr true, all you can have to do is give it an object and JavaScript or jQuery will go ahead and make that query string for you.

[00:10:04]
This makes it easy to make dynamic, like if we wanted to be able to like change up the query or whatever, all you have to do is feed it a variable and it'd be done.
>> Brian Holt: Cool, so I fixed two of them.
>> Male Student 2: How many did you do?

[00:10:19]
Two?
>> Brian Holt: Two.
>> Male Student 2: Did you get the one?
>> Brian Holt: I haven't.
>> Male Student 2: Did you get the [INAUDIBLE].
>> Brian Holt: Let's see.
>> Male Student 1: I don't think I saw any right there.
>> Brian Holt: So full disclosure, I have not looked at this yet so. Let's take a look at this. All right so he has a button click, let's just see what's going wrong first.

[00:10:49]
So we gets the loading, let's take a look what is console saying failure to alert in secure response, I bet he has JSONP down here.
>> Brian Holt: No, he has HTTPS.
>> Brian Holt: And it doesn't look like he's actually making image tags.
>> Brian Holt: So first thing, I wouldn't expect many people to recognize this right away.

[00:11:23]
You can't load secure content onto an insecure page. Well you can, but not in this particular case. So the fact that he has s here which means it's a secure connection that caused him some issues and also I don't think it's served securely anyway for that matter. So it needs to be served insecurely because that's what it's expecting.

[00:11:45]

>> Male Student 2: Does it need a query on there as well? Does it not have one?
>> Brian Holt: No he has it right here in the data.
>> Brian Holt: Okay, and as far as, like, this he just doesn't have the fist part of the image in here as well. So you, I or ing src equals [SOUND] okay.

[00:12:10]
And then surprise puppies so interesting problems. Any questions about how I did that or what I was doing? If you're gonna do any amount of web development this is just gonna be something you get very familiar with doing.
>> Brian Holt: It's also typically easier outside of CodePen to debug but a lot of the same techniques still apply.

