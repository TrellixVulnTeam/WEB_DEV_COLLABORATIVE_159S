[00:00:00]
>> [MUSIC]

[00:00:03]
>> Nina Zakharenko: Let's talk about Git. I'm sure all of you guys have learned about GitHub. So Git and GitHub are actually two different things. Git's a tool, and GitHub is it's a platform where they kind of use that tool in a social way. So they host lots of code from lots of different people and it's mostly open and everyone can go ahead and check it out and have a copy of that code.

[00:00:38]
So the advantage of using Git, is Git is a version control system. So you can save snapshots of your files as they were in different stages. And if something is going wrong and you need to go back, you can kind of rewind and see what that file look like at a certain point and time.

[00:01:01]
So mostly use for code but version control is also great for even a text project. If you write a paragraph and you put it in your version control system and you deleted it and two days later, you're like, I wonder what that paragraph said. It actually had a really good idea in it.

[00:01:20]
I want it back. You can cruise back through history and take a look at that snapshot. So Git works perfectly fine on your local machine. But it's nice having a remote server that you can sink up your changes with. So, if anything happens to your machine, your changes are still there.

[00:01:42]
GitHub is a remote server. So, you guys all have GitHub accounts, we're going to go ahead and fork our first project.
>> Nina Zakharenko: So I made a test account that I can use with you guys. So I'm gonna sign in.
>> Nina Zakharenko: I'll give you guys a few minutes to sign in to your GitHub accounts.

[00:02:25]

>> Speaker 2: Is anybody not in GitHub? Anybody need more time or should we keep going?
>> Speaker 3: Keep going.
>> Nina Zakharenko: [CROSSTALK] All right so Brian has this project that we're all gonna make a copy of, make some changes to and then push them back up to his project. So go to github.com/btholt.

[00:02:57]

>> Nina Zakharenko: And look at Brian's repositories.
>> Nina Zakharenko: And click on this one pull requests.
>> Nina Zakharenko: So we're going to go ahead and fork this project and what fork means is take a snapshot of everything that Brian did, copy it over to my machine. I can make changes. I can use my version control.

[00:03:26]
And it doesn't really matter what Brian is doing. But the really powerful feature, forking, is Brian's working on his project and I'm working on my project. Maybe Brian decides that what I'm doing is really cool and he wants to include what I've been doing into his repository. So he can go ahead and take my fork and copy it over to his code.

[00:03:50]
And so now, we have fort, so we're in the prongs, we're doing separate things but then we join back together.
>> Nina Zakharenko: So let's go ahead and click this fork.
>> Nina Zakharenko: And this is going to forward you to a different URL. So now instead of being on github.com/btholt, I'm now on github.com/nina-test.

[00:04:22]

>> Nina Zakharenko: So this is my own project. So now take this https clone URL that's right here and copy it. You can do that using this button.
>> Nina Zakharenko: We're going to go to our terminal, and go to any directory where you'll be able to find your files again on.

[00:04:53]

>> Nina Zakharenko: So on Mac you can do the cd ~/Desktop. That will take you to your Desktop. For the Windows users, you guys will wanna be using that git bash application for this part. So we're gonna take that URL that we copied. And type in get and clone and then paste it in.

[00:05:19]
What this is gonna do is pull down that code from that server, make a new directory for us locally and copy everything that's in there.
>> Nina Zakharenko: Does everyone have this step complete? You guys all have your forks checked out? Okay so now we can go into this directory.

[00:05:50]
It's called pull-requests-1. This is a pretty boring project, there's really nothing in here, so I want you guys to do an exercise. We're gonna liven it up a little bit. So in this directory, make a new file, call it your first name.txt and in that file put a fun fact about yourself.

[00:06:17]
So I'll give you guys a few minutes to do that.
>> Speaker 3: What should we call it?
>> Nina Zakharenko: Your first name.txt.
>> Speaker 2: Let's do first name and then first letter of last name.
>> Nina Zakharenko: Okay, yeah.
>> Speaker 2: We have 110 people.
>> Nina Zakharenko: All right.
>> Speaker 2: So it's likely first names will collide.

[00:06:39]

>> Nina Zakharenko: All right let's do a first name and a first last name letter.txt.
>> Speaker 3: Okay. How do you want them to create the files? [CROSSTALK]
>> Nina Zakharenko: You guys just need to make sure this file is in this directory.
>> Speaker 3: [INAUDIBLE]
>> Nina Zakharenko: Did you fork the repository?
>> Speaker 3: Not [INAUDIBLE]
github.com/bholt.

[00:07:19]

>> Nina Zakharenko: BT Holt.
>> Speaker 3: BT Holt?
>> Nina Zakharenko: BT Holt.
>> Speaker 3: Yes. That's nice, thank you. T.
>> Speaker 2: I dropped one.
>> Speaker 4: That readme or are we supposed to make a new file?
>> Nina Zakharenko: Make a new file.
>> Speaker 2: Make a text file.
>> Nina Zakharenko: Yeah just a plain old text file.

[00:07:41]

>> Speaker 4: From the command line?
>> Nina Zakharenko: If you are on a Mac and you wanna make a new file from the command line or on a Linux machine there's a fun command called touch. So you can say touch and a file name.
>> Nina Zakharenko: And what that does is just creates a totally empty file.

[00:08:04]
So if I do an ls now, I'll see a ninaz.txt file in here.
>> Speaker 3: If I'm here in Windows, just go, we're in the Desktop, right? Okay.
>> Speaker 2: Folder on the desktop.
>> Speaker 3: Okay, the folder on the desktop. So then just drop a txt file. Open a Notepad.

[00:08:29]
Open Notepad or TextEdit. And the.
>> Speaker 2: Just git.
>> Nina Zakharenko: To guys that get this touch command working? Yeah, okay. I think on Mac you can just say open and then it'll open up a text edit.

