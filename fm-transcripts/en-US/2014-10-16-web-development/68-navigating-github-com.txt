[00:00:00]
>> [MUSIC]

[00:00:03]
>> Speaker 1: So I'm gonna go back to my GitHub account and we're gonna poke around a little bit.
>> Speaker 1: You can go ahead and refresh the page.
>> Speaker 1: Now you see my name would go here which is what I typed when Git asked me what my name was. Says that I changed this three minutes ago.

[00:00:33]

>> Speaker 1: So, we can go ahead, it'll give you a link to the latest commit, we can go ahead and click that. I messed up, here's another file. And GitHub is showing me the exact changes that I made.
>> Speaker 1: So if you don't wanna fiddle with the command line which can kind of be little bit obtuse, you can do a lot of things from the GitHub.com site.

[00:01:07]
And there's also a UI client available for both Mac and Windows.
>> Speaker 1: Okay, yes?
>> Speaker 2: There's a question on, she's saying, every time that she modifies the file, should she use git add again or just commit it directly?
>> Speaker 1: Git add. So here's a funny thing. If you modify a file, and you do git add on it, and then you change it.

[00:01:40]
The first time you called git add, that was the version of the file that's in your staging environment. If you do any more changes and you don't do git add again, when you commit, git will commit the version of that file from the last time that you ran git add.

[00:02:03]
So a good git work flow is lots of commits. Any time you do something there like, I'm not sure about this, go ahead and add it and commit it, then you always have a history of it later.
>> Speaker 3: If you commit something and you decide you didn't want it, how do you get back to?

[00:02:25]

>> Speaker 1: It's kind of outside the scope of this class. There is a few different ways, but the thing that you're probably going to want to do is create a new branch. So your master which is like the base branch of any repository is gonna stay clean and working.

[00:02:46]
And then when you wanna work on a new feature you would create a new branch, hack away on that branch but you always have master exactly where you left it. Does that make sense?
>> Speaker 3: What is the difference between a branch and a fork then? I guess, I didn't quite understand that.

[00:03:01]

>> Speaker 1: So a fork is, you can kinda think of it as a copy of someone else's code. A branch is a copy of your own code. So forking is taking a different repository and making a copy of it that has all the history that that repository has had.

[00:03:24]
So you can see the changes on it but now you have your own copy. You would make a branch of your own repository. Does that make sense? All right.
>> Speaker 2: Fork is a branch, it's just your branch of someone else's code.
>> Speaker 1: So, we're gonna make our own, our first pull request.

[00:03:49]
So we're going to go back to our copy of this pull request, our fork of this pull request project. We're gonna scroll over to the right, click on Pull Requests.
>> Speaker 1: And we're gonna make a new one.
>> Speaker 1: So we can see that GitHub is being spar] and it's like, you forked this off btholt.

[00:04:18]
So, I'm gonna make a pull request that has all the changes that I made.
>> Speaker 1: So you can go and review it. You'll see the changes that you're going to be pushing back up. And click on Create pull request.
>> Speaker 1: Fun fact about GitHub comment fields, compiling all sorts of emoji.

[00:04:49]
So, let's make this one colorful.
>> Speaker 1: C, let's put some cats in there.
>> Speaker 1: Okay, once you've created a tail and written a message, we're going to go ahead and create this pull request. So GitHub is telling me that I want to merge in two commits back into this original project that we forked from.

[00:05:25]
And those commits are coming from my project.
>> Speaker 1: Does anyone need help getting to this point?
>> Speaker 1: So-
>> Speaker 2: I think people are wondering how to get to the pull request.
>> Speaker 1: So, in order to do that, I'm just gonna go through it again. I'm gonna go to my copy of this repository.

[00:06:08]
And, and this links up here, this one will take me to my account and this one will take me to this project.
>> Speaker 1: So, I go to the root of this project, I scroll to the right, click on Pull Requests. And then New pull request.
>> Speaker 1: So, because I've already done this.

[00:06:47]

>> Speaker 1: And I don't have any other changes, GitHub is smart enough to be like, hey, you already did this. Do you want to look at the one that you already created.

