[00:00:00]
>> [MUSIC]

[00:00:03]
>> Nina Zakharenko: So we're back, and we're going to talk about the server side component of this app. And right now it's kind of funny, we're running the client and the server on our own computers. When you guys are gonna put something out there you're probably not gonna wanted to do that.

[00:00:22]
You're gonna want to find some web hosting, for example Heroku does a great job with this. They make it really easy for beginners. So your server will be somewhere else and you'll have lots of clients connecting to your server which will be running code like this.
>> Nina Zakharenko: So this Var express and var app, is something that you've already seen.

[00:00:50]
This var bodyParser is something called middleware, for the sake of time, I'm not going to talk about it. It's a little bit outside of the scope of this class, but it kind of helps us parse some of the input that we're going to be getting.
>> Nina Zakharenko: So here are some tweets that we've prepopulated.

[00:01:15]
So if you kill your server and start it back up, these guys will always be here, these tweets and that's because they're actually in memory.
>> Nina Zakharenko: If you create new Tweets in your app and you kill your server, those Tweets are gonna get wiped out.
>> Nina Zakharenko: So let's go over the anatomy of these Tweets for just a second.

[00:01:43]
So we see our square brackets here, that means it's a list of Tweets. These tweets are objects, but unlike we've seen before they don't have names. We don't have to give them names, they just live in this list.
>> Nina Zakharenko: So we have a text property and a time property.

[00:02:04]
And this new keyword is a not something that we've seen before, so I'm just going to quickly cover what that does. By calling new Date, you're creating a new instance of the date object. So what this will give back to you is an object with a bunch of properties that knows the time in this very instance right now.

[00:02:31]
Calling getTime on this object will give you back the number of milliseconds since January 1, 1970. And the reason we're subtracting from this time is because if we go back to our tweets app, we see this timestamp here. And we want people to think that we've had some staggering in between our tweets.

[00:02:59]
So here we see there's just a few seconds difference in each one of these. Whoops.
>> Nina Zakharenko: And this minus time is what produces those different timestamps on the front end. So here, we're telling express to use this static directory called public, and _ _dirname. It's something that is given to us for free in every node file.

[00:03:40]
Basically it's telling us what's the directory that this file is running in. There is another, I don't know if built-in is the right word for it but you get it for free, is _ _ filename. So if you ever need to know what the file is called, dynamically, you can just use that variable anywhere in your node files.

[00:04:04]
And node will be able to tell you what that filename is.
>> Nina Zakharenko: So let's talk about this app.get method.
>> Nina Zakharenko: Do you guys have any questions about HTTP verbs?
>> Nina Zakharenko: Does everyone get, ha ha, get what get means?
>> Nina Zakharenko: So we're just asking the server, just give me what's here.

[00:04:39]
I don't have any input for you, I'm not trying to pass anything back. I have a URL and you have a file I want, so just give it back here.
>> Nina Zakharenko: Here, we're setting the response type, we're telling the server, I'm sorry, the client that the server is sending back json.

[00:04:58]
And what we're gonna be sending back is JSON.stringify of our list of tweets.
>> Nina Zakharenko: So when this page loads, we're calling that GET method we're getting back the data and displaying it on this page. And we should be able to go to localhost:8080/ajax, and there, we just get back our JSON.

[00:05:33]

>> Nina Zakharenko: Does anyone have questions?
>> Nina Zakharenko: So this post here is the most interesting part of our whole little app. And that's because as a browser, when someone types in here we're hitting our server and we're hitting that post endpoint. So we get some text, we make a brand new tweet.

[00:06:12]
And here in the text we say request.body.tweet. And that's because what our browser's sending us is JSON looks kind of like this.
>> Nina Zakharenko: So that's what the client is sending back to the server, that's what the server is working with.
>> Nina Zakharenko: So we're saying the text is request.body.tweet and the time just a new Date.

[00:06:53]
So we want that tweet to be saved in our system as getting created right now in this very instance. So we talked about array.push yesterday. So what this line of code right here is doing, tweets.push(newTweet), is adding not tweet on to the end of our tweets list.
>> Nina Zakharenko: So, this list is getting bigger and bigger every time someone inputs some text on our webpage.

[00:07:35]

>> Nina Zakharenko: So right here, we're telling the client, hey, we got your information, I'm just gonna print out what I saved.
>> Nina Zakharenko: Does anyone have questions about what's going on here?
>> Nina Zakharenko: So basically this list of Tweets is getting bigger and bigger and bigger.
>> Nina Zakharenko: And that's the mechanics of our Tweeter.

[00:08:22]
I think Brian and I have a million dollar idea here, so you guys better not steal it. Come after you with lawyers.
>> Nina Zakharenko: Anyone, questions, questions about how this all fits together?
>> Nina Zakharenko: You guys all look hungry and tired.
>> Nina Zakharenko: Hello, Tweet about some food. So that's all that Brian and I have unless, Brian, do you wanna add anything?

[00:09:08]
So this is us.
>> [INAUDIBLE]
>> Nina Zakharenko: We are on Twitter, I'm on Twitter @nnja, Brian is @holtbt, and if you guys have any questions, feel free to tweet at us. It's probably the fastest way that you'll get back a response. It was really a pleasure working with you all.

[00:09:37]
So, thank you very much.

