[00:00:00]
>> [MUSIC]

[00:00:03]
>> Brian Holt: Okay so I'll give you the first little bit right here. You're going to have user dash btn, sorry period user btn dot click function. So that will get your button listening for that event. Rather, your JavaScript listening for the button event. Most of us getting at least that far?

[00:00:30]
Okay, cool.
>> Speaker 2: Question was .val and .text will do basically the same thing when it's called on a tag with text.
>> Brian Holt: Yeah, vals used for inputs of some sort, whether that be a check box, radio button, inputs. Valid refers to whatever the user has typed in there, or the user can type in there for that matter.

[00:00:56]
Texts for the other hand is used for like, paragraphs, divs, things that are containing texts. That are not editable by the user. But conceptually what they're doing, which is modifying text of an element, is conceptually similar.
>> Brian Holt: All right so I see most people got the click listener.

[00:01:25]
Are we getting the value out of the input how's that going? Okay so let's just go ahead and do that so I'm just gonna put it in like word or something like that or even val that's fine dollar sign, what did I call it? -user-input.val
>> Brian Holt: Did most of us get at least this far?

[00:02:11]
So we've now grabbed what ever is in here, so if I type this, what ever is in here, we have now grabbed that out of the input. Now, the next thing we have to do, is we have to set that as the text of this paragraph down here.

[00:02:29]
User text we're gonna do that using the .text function and we're just gonna get that text function the input that we got from the user val our user input .val.
>> Speaker 2: I think they're asking why you're saving it in a variable.
>> Brian Holt: It's certainly possible to do this in one line.

[00:02:53]
I'm doing it, one, for clarity, and two, so I can do it in multiple steps.
>> Brian Holt: An old adage that I learned when I first started is it's better to be clear than clever.
>> Brian Holt: Clever code is never a good thing.
>> Speaker 3: What is not?
>> Brian Holt: Clever, like doing some crazy operation in ten characters that just melts everyone's mind but no one can understand it, right?

[00:03:37]
Like it's better to take ten lines and really be verbose and say that this is what's happening. So that somebody can just read it and say, this is what's happening. Now in this particular case, you could do it in one line, it'd be just fine, but.
>> Brian Holt: I just recommend do whatever seems clear to you.

[00:03:59]

>> Brian Holt: All right, so now we're going to go ahead and say .user-text,
>> Brian Holt: .text, okay? Then what goes in here? Something needs to go in here.
>> Brian Holt: Okay, val goes in there, right? Because here we've pulled maybe if this isn't as clear we'll change this to be like user text right.

[00:04:34]
Here we'll put user text. Just so you don't get that confused with this val because they're separate vals. Okay so user text and user text there.
>> Brian Holt: That's it, four lines of JavaScript, really could be done on three but all right, so go ahead.
>> Speaker 4: One of the questions is how would it work doing the one line?

[00:05:07]
Could you maybe just show maybe the difference.
>> Brian Holt: So let's just go ahead and comment these out so that you can see that.
>> Brian Holt: And here you would just do it dollar sign user dash text dot text and then here we will talk a little bit about nesting functions inside of each other we are just gonna do user-input.val.

[00:05:45]
And this should work as well, yeah. So the question you have to ask yourself, does this look really weird and I don't get it? If you answer yes to that question then don't do it. Do this, right? This is more verbose, but this is I don't know, I won't say concise, but certainly shorter.

[00:06:10]

>> Brian Holt: So let's leave that one commented out.
>> Brian Holt: Okay, so do we kinda grasp what's going on here? We're grabbing the value out of the user input, and then we're just saving it, and then we're just using it right there.

