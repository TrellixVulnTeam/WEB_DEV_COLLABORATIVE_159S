[00:00:00]
>> [MUSIC]

[00:00:03]
>> Brian Holt: Using JavaScript to manipulate the DOM. This is fun stuff. I like this stuff because people start finally saying like, okay, we went through all this academic exercises, I mean, who cares, right? I'm going to show you right now why you care. [LAUGH] You're actually going to start making changes to your webpages using JavaScript.

[00:00:26]
So what is jQuery? jQuery is JavaScript, right? jQuery is just a bunch of JavaScript that some really smart guy, his name is John Resig, wrote so that your JavaScript is way easier to write, okay. But again, this is just purely JavaScript. This is a JavaScript tool set. It's main purpose is to make common tasks in JavaScript easier.

[00:00:54]
Like, for example, changing a class on a DOM Node can be kind of difficult for people to grasp, but in jQuery they just made this syntax really simple, so it's cool. jQuery is also used on some 80% of the top websites in the world. It's like, as far as like libraries or tool sets or anything like that, it's far and above the most common.

[00:01:20]
Everyone to some extent in the JavaScript world knows at least that much jQuery. So if you see that $ notation, like $, then parenthesis, like nine times out of ten that's gonna be jQuery, like that's kinda like their calling card, like if you see $, it is jQuery.

[00:01:40]
Yeah?
>> Speaker 2: Question on the difference between toolkit, tool set, and framework?
>> Brian Holt: [LAUGH] The pragmatic answer is not a lot. There's these words thrown around toolkit, tool set, which I take those to be synonyms. And then there's another word, framework. That's just, again, JavaScript someone else wrote, or a code that someone else wrote to make your life easier.

[00:02:08]
It's a philosophy difference, and if you actually wanna get into it, I talk about it in my other Friend and Masters Class, which is the JavaScript Showdown. So, that would actually be great reference for that.
>> Speaker 3: Two months from now.
>> Brian Holt: Two months from now. Cool, so $, if you see a $ like that, that's jQuery's calling card.

[00:02:36]
So, let's actually start writing some jQuery, okay? Got a codepen down here
>> Brian Holt: Let's just collapse this one right here. All right, let's first look at our html real quick, right? So, I have my html, I have a p right here, where I have bunch of Lorem ipsum text, right?

[00:03:02]
Down here, this is probably your first time seeing this. I have a script tag, and all the script tag is doing is it's pulling in jQuery, right? If you wanna be able to use jQuery, you have to pull it in first, right? That's what that does, it says hey, go out to jQuery's website, grab jQuery, and load it.

[00:03:19]
So now we have all this JavaScript on our page that we can now use. Does that make sense? Cool, so you might be asking yourself is like, I see all this Lorem ipsum text, it's not showing up over here. Why? That's a great question, I'm glad you asked.

[00:03:40]

>> Audience: [LAUGH]
>> Brian Holt: So I have this little snippet of JavaScript right here, caption-text, and then .text('Magic!'). So, notice over here, I have a class called caption-text. Here, you remember the syntax, right? This looks like CSS, right? Like that .caption-text is referring to the class caption-text. They did that on purpose so it should feel like CSS to you.

[00:04:11]
For example, if this had an ID of my cool ID, how would I refer to it? Hash my cool ID, cool. Or again like I could say p here as well, this would also work. Because it would refer to this p right here. So, you see $ and then in quotes you're gonna have the selector, right?

[00:04:34]
So on this, what I had before was caption-text.
>> Brian Holt: And then after that, this is now essentially that, this contains that jQuery element for you to operate on. Here we're calling the text method, which is a jQuery method, right? It's not a JavaScript method, it's built into jQuery.

[00:04:57]
And I'm saying I want you to set the text to be Magic. We're gonna go over this a bunch, so if this doesn't make sense right now, I'm going to hammer it into your head.
>> Speaker 5: Hey, what's the $, again?
>> Brian Holt: That's essentially jQuery, essentially it is this jQuery.

[00:05:15]

>> Speaker 5: So it's telling you that this line of JavaScript is jQuery.
>> Brian Holt: Yes.
>> Speaker 6: $ is really the name of the function.
>> Brian Holt: It is.
>> Speaker 6: It's just a function comp.
>> Brian Holt: And you can actually put jQuery here and it will still work. But everyone, again, in the world is super lazy, myself included, they just do the $ because it's one letter.

[00:05:42]

>> Speaker 7: So, it's like JQuery.text.
>> Brian Holt: Yeah.
>> Speaker 7: Magic.
>> Brian Holt: There you go.
>> Brian Holt: Cool, good question. Other questions, we good with this?
>> Speaker 8: Is there a way to see all the functions attached to that jQuery?
>> Brian Holt: There certainly is but I'd say look at the docs, right? jQuery has awesome documentation.

[00:06:04]
In fact, let's just go ahead and pull it up real quick.
>> Speaker 8: There's not a way in a JavaScript object to give a list of its members, properties, functions.
>> Brian Holt: Yeah, the answer to that question is not very well.
>> Brian Holt: I'm sure there is a way to pull it apart but it's not going to be very useful.

[00:06:37]

>> Speaker 6: Do some of the IDE tools, like WebStorm.
>> Brian Holt: They all have jQuery stuff built into it, so, particularly WebStorm.
>> Brian Holt: Yeah, so jQuery has these documentation. You just look up here to the like, what am I looking, API documentation. Awesome, these documentations have been edited and re-edited and re-edited, so they're really succinct.

[00:07:01]
They're actually really quite useful and intuitive.
>> Speaker 3: We have a course called jQuery. It's done by the guy who actually made this documentation.
>> Brian Holt: Yeah, definitely, so check that out as well.
>> [INAUDIBLE]
>> Brian Holt: Cool, yeah, anything you would wanna ever know about this, I mean let's look at the text one, we just did that, so.

[00:07:32]

>> Brian Holt: And it just tells you, this method does not accept any arguments or that one doesn't rather, but we gave it text, so text right here, this is one that we used. So I guess that's another good point to bring up is that these functions will do different things depending on what arguments are given.

[00:07:50]
So if I say .text with no arguments, what it does is it goes up and grabs the text and gives it back to me. Whereas if I give it text, it's assuming that you want to give it text, so you're actually going to set what it is. In this particular case, we did magic, right?

[00:08:07]

>> Speaker 9: Somebody mentioned in chat that $.fn actually will list all the functions.
>> Brian Holt: Does it?
>> [INAUDIBLE]
>> Brian Holt: [object Object]. Yeah, that could probably console.log [INAUDIBLE].
>> Speaker 9: Looks like if you console.log and it worked.
>> Brian Holt: There you go, everything, right there. But again, this is not super useful.

[00:08:41]
I would still recommend sticking to the docs.
>> Speaker 10: Well, for jQuery, but there's other APIs, functions that are other objects that you might not have documented.
>> Brian Holt: Totally, cool.
>> Speaker 11: So it's still the HTML that's ultimately controlling the output, in the sense that we don't need a document.write or some other way to tell it to put that on the screen, it's just the HTML.

[00:09:10]
And we're just, jQuery is like intervening and changing?
>> Brian Holt: Yeah, that's a good way of thinking about it. All jQuery is is it's using raw JavaScript and just essentially making things that are kind of difficult to do, they essentially write all the difficult syntax for you so you can have a very clean and easy to use API.

[00:09:34]
But there's nothing that jQuery is doing that you can't do by yourself. In fact, there's a lot of people that don't use jQuery because most of the tasks they use for jQuery are somewhat easy to do anyway. But jQuery is a good place to get started, I mean, I've been using it forever so I recommend it.

