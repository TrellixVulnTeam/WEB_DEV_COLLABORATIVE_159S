[00:00:00]
>> [MUSIC]

[00:00:04]
>> Speaker 1: One person online said they are at the pull request page, but can you maybe just explain generally more what the pull request is.
>> Nina Zakharenko: Sure.
>> Nina Zakharenko: So a pull request is me, I've taken a copy of Brian's code. I've hacked away on it. I did something really awesome.

[00:00:25]
And I wanna be like, hey Brian, you should use this code that I've wrote in your project. So by creating a pull request, what I'm doing is making a summary of all the changes that I did, so and Brian goes to look at this? He can see that I made these additions, I made this deletions.

[00:00:51]

>> Nina Zakharenko: And he can decide whether or not he wants to take the code that I made. And put it back into his own repository. So he's merging it back in. If he chooses to accept my pull request, if he chooses not to, nothing happens. His code remains exactly the same that it was.

[00:01:11]

>> Speaker 3: So a pull request is really a message to Brian saying take a look at this, you might wanna merge it back in.
>> Nina Zakharenko: Yeah, exactly.
>> Brian Holt: So Nina's workflow stops here. She cannot force me to accept her pull requests. Later, I'll get on and I'll look at her code.

[00:01:29]
I'll either approve it or like I'll give her some messages like, I like this but change this and this and this first. We can push it back to her to make more changes or I can say, okay, I like it, and then you merge it in. So now, both of our code bases kind of merged all of their changes together.

[00:01:43]
And now when we have one code base with both of our changes.
>> Nina Zakharenko: I'm actually going to go ahead and use Brian's account and accept all your pull requests. So that he can have his super awesome project that you guys are all a part of. So let me open up his account.

[00:02:07]

>> Nina Zakharenko: See if you're on here.
>> Nina Zakharenko: Okay, so Brian's GitHub has all these messages on it.
>> Brian Holt: There's like 20 pull requests.
>> Nina Zakharenko: And all these people are like knock knock Brian, you know your code was a nice starting ground but I made something better with it, I've changed it.

[00:02:36]
So if Brian goes to his product, his view of the pull requests looks a little bit different. I had one pull request and that was the pull request I was making, he's got 20 of them.
>> Brian Holt: It's pretty intimidating.
>> Nina Zakharenko: And just a quick note, the emoji work in the comments but not in the title.

[00:03:09]
You guys are artistic. I like the ghost, kinda looks like a pirate, it's got one big eye and one little guy. We got some cats, someone used my commit message. Someone is telling me that I messed up. [LAUGH] So when you put in your pull requests, the person whose code you branched off of will see all this guy, all this text.

[00:03:40]
And really instead of the ghosts and stuff, you should be putting in a reason why Brian should, if his project was real, pull your code back in.
>> Nina Zakharenko: Aw,
>> Nina Zakharenko: You got to know you did one. Let's see, we got some cats and that guy is me. All right so as Brian I'm looking at this pull request.

[00:04:13]
I see that there is some comments here. There is Marks's text file then he changed it. Can go to these tabs at the top, I can see the comments. And I could see the files that he changed. Awesome, hockey is super fun. So I'm like all right, this pull request is awesome, I'm gonna go and merge it in.

[00:04:37]
So merge this pull request.
>> Nina Zakharenko: So now after this merge now my project has mark.txt in it. So my project and Mark's project both share that file. Two projects were merged together.
>> Nina Zakharenko: I'm gonna accept some more pull-requests.
>> Nina Zakharenko: I'm gonna go with this ghost one cuz ghosts are awesome.

[00:05:22]
I'll show you guys another feature. If I go to these tabs at the top and look at the files changed, this summary, what I can do is actually comment on individual lines of code. There's this little comment icon, it's a little bit off the screen, but if I click on it, I'm gonna write Vi sucks.

[00:05:50]

>> Nina Zakharenko: Now let's see.
>> Nina Zakharenko: Thumbs down. And I'm gonna leave that comment.
>> Brian Holt: You can't put that as me. [LAUGH] You know what? I'm on your logic.
>> Nina Zakharenko: [LAUGH] Wait! I can't or I did? Because I think I did. Sorry Jong. Anyhow, when Jong goes back to his pull request, you'll see this comment that Brian made.

[00:06:23]
That Brian made. [LAUGH] All right, so just dropped some knowledge on you guys. This is a lot. It's a new tool, a new website. Does anyone have questions? Is any of this confusing?
>> Brian Holt: You might wanna refresh the page.
>> Nina Zakharenko: [LAUGH] Do I?
>> Brian Holt: Yeah, I think so.

[00:06:48]

>> Nina Zakharenko: [LAUGH]
>> Class: [LAUGH]
>> Nina Zakharenko: No laughing. This is serious business.
>> Class: [LAUGH]
>> Nina Zakharenko: Okay I'm serious though does anyone have any questions? Because for the final project we're going to be cloning a real repository of Brian's. So if there are any steps that you missed please let me know.

[00:07:34]

>> Nina Zakharenko: Okay?
>> Nina Zakharenko: Let's do one more.
>> Nina Zakharenko: Okay, I've been Rick Rolled. Awesome, Vermont rocks, so. I think this pull request is great, I am going to merge it in.
>> Nina Zakharenko: So, now my pull request project has two more, one more text file in it. So if you guys were starting from scratch and you forked this project right now you would get the errand dot txt file and the mark dot txt file along with that original readme.

[00:08:36]
It would be a snapshot of what the project looks right now.
>> Nina Zakharenko: Okay, talked about all this stuff. And a lot of this is in the slides. I thought it would be a lot more interesting to do a live demo. But if you need a copy of the commands here they are.

[00:09:05]
Talked about get status. We talked about our unstaged changes. We did a Git Add and added that file and it's being helpful and telling us what changes are going to be committed the next time I run commit. We do our commit and we push that back up to Origin which lives on GitHub.

[00:09:32]
We made a pull request.

