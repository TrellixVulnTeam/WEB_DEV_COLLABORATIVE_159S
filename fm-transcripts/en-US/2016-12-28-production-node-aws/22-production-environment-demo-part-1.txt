[00:00:00]
>> [MUSIC]

[00:00:04]
>> Kevin Whinnery: What I'm gonna do is basically deploy our to do MVC application to a production environment. And there's gonna be some kind of bumps along the way because I'm gonna actually manually configure a few things after the application has been deployed. But if you have a AWS account already, you can feel free to follow along cuz these will be the same steps that you will need to, that you will need to reproduce after you know as we're trying to get the application deployed yourself.

[00:00:41]
So does everybody have an Amazon account? Like at least an Amazon developer account? So we did go so far as to sign up there. So the next thing that you'll want to do, and I'll drop this in the, drop this in the chat, is the Elastic Beanstalk command line interface is something that you'll need to install.

[00:01:13]
It's a Python utility that can be installed on any on any platform. I'm looking at the docs right now but let me drop it in the chat.
>> Kevin Whinnery: And if you have homebrew, it's actually fairly easy to get installed. There's actually a brew package that will do it do it right up for you.

[00:01:41]
If you also have Python installed, you can install it with Pip as well So let me go ahead and drop that in.
>> Kevin Whinnery: So if you want to go through the process of starting to get that installed. I will sort of slowly go into the Amazon console and give you a little chance to get that installed as we go.

[00:02:07]
Because the first stop is gonna like once you sign into your Amazon account which I am right now, you'll probably see a dashboard that looks something like this, all deployed to a region that I haven't deployed to yet, maybe. Or I guess I could go, US East. It doesn't really matter.

[00:02:33]

>> Kevin Whinnery: All right, so I'm gonna be creating my resources within the US East region, but first I need to start by creating an API user for myself. So from the dashboard, I'm going to go down to identity and access management. And these users are actually you know shared across your account.

[00:02:55]
So it doesn't matter which region you're in for this particular one. So the first thing that you're going to want to do is go down here to users. And create a new user. And you can give them a user name of some kind. So I'll go through and actually create one.

[00:03:20]
Although I actually have done this numerous times. So I already have one created. So once you create a user. You'll have the opportunity here in the browser to see their security credentials which is going to be their secret key and like a user ID. So you're gonna want to download those credentials and keep those in a safe location because it's not possible to retrieve them.

[00:03:45]
If you lose them, you're gonna have to regenerate credentials for the user for security reasons. So once you create a user, download your credentials, store those in a safe location. Looks like is saying that he always gets scared in the AWS console and that is wise as well as well you should you know it's kind of a scary place.

[00:04:08]
But hopefully we'll leave today with it being a little bit less scary. So once we have those, once we have those user created we're gonna want to add that user to a group and this is different from the security groups that we'll be talking about later but it's essentially.

[00:04:29]
User group which gives them certain permissions within the AWS infrastructure. So in my case, I only have one group defined which is admins, which kind of gives God mode access to a user for all of the resources in my AWS account. As a practical matter, most organizations you'll work in that use Amazon, will have security groups with much more granular restrictions.

[00:04:55]
But if we look at that briefly, just to give you an idea of what it is.
>> Kevin Whinnery: Let's see.
>> Kevin Whinnery: So we can see the users that are in a group. And it's permissions and Amazon has essentially like a language a DSL for determining like what resources a given group or a given user has access to and the administrator access policy.

[00:05:28]
It's JSON based obviously and for the administrators basically says that you can like all kinds of actions on every kind of resource. So it's the most permissive one, but you can make these very tightly scoped to specific products, to specific instances of services as granular as you feel like you need those services to be.

[00:05:51]
So once you've created, excuse me, a user added them to a group which has sufficient permission to yes, question.
>> Speaker 2: Some people ask you, how you want to do this or you just want them to watch for now? And then they're gonna go through themselves. Some people are behind but-

[00:06:13]

>> Kevin Whinnery: Yeah, I mean, I think that if you want to follow on, that is totally fine. The first page of the documentation that I put in the chat will also take you through the same process. So if you want it. For me, personally, I like to see it and then do it.

[00:06:30]
But I would recommend that you probably watch at this time. And then try to try to recreate it. Because if we all try to do it together, I don't think it will work. So we'll go through the process show you the steps and then I'll help each of you get through it with the rest of the time we have here this afternoon, right?

[00:06:52]
So we create a user, we download our credentials, we add that user to a group or give that user permissions to access the resources that it's gonna need.

