[00:00:00]
>> [MUSIC]

[00:00:03]
>> Kevin Whinnery: In the final bit that you're gonna look at in the workshop session this afternoon is a tool called a Rollbar. And a Rollbar, again super useful. You can sign up for a free trial account to exercise it a little bit. But when you sign up, if you elect the programming language you're looking for, gives you some handy dandy instructions on how to get your module initialized.

[00:00:37]
So you can start sending some test notifications pretty quickly. But you'll find that there is an express middleware that you can actually plug directly into your application that will capture exceptions coming in to your express app and send them directly to Rollbar. So your mission, if you would choose to accept it, is to sign up for a free Rollbar account.

[00:01:06]
And start sending any exceptions which are caught by Express to RollBar. Now one thing that you'll I'm sure figure out in your travels is that the order in which you add middleware to an Express application is significant. And the errors that you put in place for 404 handling and for error handling are gonna come after the routes that you define.

[00:01:32]
So here in the routes file, that's a different one. This is where your application routes are defined. We're probably not gonna do it here. Where we're gonna go is into webapp.js where we configure our other middleware. And after our other routes in middleware have had a chance to try to handle the request.

[00:01:59]
Somewhere down beneath here we're probably going to add in that other middleware that's going to start capturing exceptions and sending them to Rollbar. You can test that by throwing an exception in one of the controllers and seeing that bubble into the middleware. The signature for error handling middleware is going to be app.use.

[00:02:23]
And then that function's going to have an errority of four, I believe, which is going to be a request, response, the next handler and then the error that was produced further up in the stack. The Rollbar module will, I believe provide one of these types of middleware, so that you can just plug directly in.

[00:02:53]
So it actually ends up working out pretty great. You can also add your own custom error handling logic in this way as well. So the issue for that is out on GitHub and that's going to be issue number 38. So we're gonna add some error handling into our Express application and in the a production environment we're gonna want to send that error information to Rollbar.

[00:03:20]
So we should think about where it would make sense to store our Rollbar service key in our configuration. And how to put their proper checks in place to make sure that it's only happening in our production environment rather than dev or test. So we'll take, I'm going to say 20 minutes, to break that down.

[00:03:42]
I bet that's something that you can we can get in place out pretty quickly, and then we can we can take a look at what that feedback looks like in the in the Rollbar interface. Yes Mark?
>> Speaker 2: Did the beanstalk actually provision more instances, I don't know if I saw actually provision more.

[00:04:02]
Yeah, there was two, right?
>> Kevin Whinnery: Yeah, so there was a third that got provisioned, and I think it could have gone up to six. But the network usage wasn't the best indicator in this case. Cuz weren't actually sending all that much data over the wire. It was more like the deluge of requests and the CPU would have been a better indicator for when we should spin up.

[00:04:29]

>> Speaker 2: And does it go back down.
>> Kevin Whinnery: Yeah, it will cool back down. Eventually this list will drop to just one after it's determined that we're not sending as much data over the wire.
>> Speaker 2: Pretty awesome.
>> Kevin Whinnery: It can be.
>> Speaker 2: So we put a really heavy load on it, can hear the credit card machine running?

[00:04:51]
[LAUGH]
>> Kevin Whinnery: Yeah.
>> Speaker 2: If you have a live web socket counter of all the money that's coming out of your account.
>> Kevin Whinnery: Well, I don't know. Hopefully, I have been spamming a lot but it seems like I haven't used up my my credits yet, so we'll see. I'm willing to take that one for the team though.

