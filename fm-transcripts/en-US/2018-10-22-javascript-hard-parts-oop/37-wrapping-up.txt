[00:00:00]
>> Will Sentance: It is lovely to be here for JavaScript, the hard parts, Object-Oriented Programming. We are gonna be here all day. What more could you ask? We'll be here all day for some wonderful material. There's me with people, some looking excited, some looking,
>> Will Sentance: Not so excited. And there you go, doing stuff at Frontend Masters, that I love doing so much.

[00:00:29]
As I said already, thank you so much for having me back. I run Codesmith. Codesmith is in the category, I guess, of coding boot camps. Think of it more, though, as, we sort of call it a residency to try and delineate between coding boot camps. We have a bunch of folk who come to Codesmith who've done a coding boot camp.

[00:00:53]
I love coding boot camps, they're wonderful. Typically, Codesmith tries to take folk who are a bit further along and kind of accelerate them through to middle-senior roles. This is the wonderful team that does it with me. There's Phil, who heads up New York. Snow, who heads up LA.

[00:01:10]
Samantha there, who is a lead engineer. Wonderful team of people, I'm very very lucky to work with. I just want to say about Codesmith. Started it three years ago, grads work all these fantastic companies. Actually in the last two weeks, three Google offers, which I was very proud of those folk.

[00:01:31]
First offer to Riot Games, which is surprising. Codesmith is based in Los Angeles and New York City. And there'd never been a grad who got through the Riot Games interview process, and now thrilled that Pauline, she will now be a software engineer at Riot Games. Very proud of her as well.

[00:01:48]
Yep, I mean, actually Codesmith graduates salaries range from 95. I've seen offers below 95, maybe 80 sometimes, so there you go. That's the pitch. [LAUGH] All the way up to 190, good. That is the pitch. What we look for in Codesmith candidates, I say this only because for everybody here, this is what makes a great software engineer.

[00:02:09]
It isn't maybe what you think of as being collect and accumulate technical knowledge. That is not what makes a great software engineer. The wonderful thing about software engineering people, the blessed thing about software engineering is that the knowledge is always evolving and changing. The only measure an engineer turns out to be how able, how capable are you at taking on that new knowledge?

[00:02:36]
How capable are you at hitting a block in your understanding of something new and then pushing through it? That is what we call analytical problem solving, the ability when you hit a block as you try and do a new thing that you haven't done before, to come out the other side successfully.

[00:02:53]
That is it. That's the number one most important thing. That makes for a hard pedagogy, that means the pedagogy it codes with has to essentially be, not teach you tons of knowledge but puts you through tons of blocks. But we got to give you first principles, and this is what I like to do at Frontend Masters.

[00:03:14]
Give you the first principles understanding your JavaScript such that you autonomously can push through those blocks. Part of that, both to give you clarity of your own mind, but also to ensure you become an enabler of other team members, technical communication. If you liked diagramming, online audience, if that was the thing you liked in Hard Parts, prepare to be thrilled.

[00:03:41]
If you didn't like that aspect of Hard Parts, prepare for more diagramming, a lot. Look, this beautiful white board that we are gonna cover. We're gonna cover with diagrams. To me that is technical communication. But I'm also gonna be calling on everybody here, again, and again, and again to verbalize the code as we go.

[00:04:06]
That turns out to be the most effective way to A, improve your technical communication. And just be clear what alternative communication is, the ability for somebody else to implement your code, your solution to a problem, without ever seeing your code, just from your ability to verbalize it. That turns out to be an extraordinary measure.

[00:04:29]
Traditionally, when you add an engineer to a team, they do not add full engineer capacity to productivity. In fact, sometimes they may even slow the team down. Because now you've got to get your mental model of the code base and make it epistemically accessible to somebody else. That can slow the team down.

[00:04:50]

>> Will Sentance: Are people noting down that word? I've recently learned that word. That can slow the team down. I'd like to try it out. Please, do not look it up. It almost certainly does not mean what I think it means. That can slow a team down, versus if you are able to perfectly communicate your understanding of the code base to that other person.

[00:05:12]
Now you can become enhancers of each other. But also technical communication clears up your own approach to problem solving. It makes you have a cleaner way of thinking about it. So these two things, we look for them in candidates for Codesmith, as it happens. But of course, they're the very things that companies dream of in their engineers.

[00:05:31]
So all of you look to today, not just as being developing under the hood, understanding of an aspect of JavaScript. But also, probably more importantly, an opportunity to focus on technical communication. All right, even here, supporting each other. I don't know what to say, cuz I mean, it's the Frontend Masters.

[00:05:53]
Frontend Masters is run by deep, empathic people, and I think we will all be playing that out here. That means, here, being that supporter who's looking to see the growth of others. You folk are gonna be pair programming. We're gonna have some time to pair program together. That will all be about, how can I grow the person to my left?

