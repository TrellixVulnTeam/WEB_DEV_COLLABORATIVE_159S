[00:00:03]
>> Will Sentance: We're going to go through a style of learning that is going to be very demanding of all of you. I'm going to be calling on each person in the room on a fairly regular basis in order for us to talk through our code as precisely and clearly as possible but first briefly, that's my background, there's Codesmith, Codesmith LA, we just left this office for a beautiful new office in Venice Beach, in the heart of Venice Beach, underneath the Venice sign.

[00:00:34]
I don't know if anybody knows that place, but it is nice. There's me with my Newberry Talented Sisters. All of whom, actually, Ersey, on the far right there, has just started her finals at Oxford. Often they won't do a model where you do intermediate exams that form your final grade.

[00:00:54]
Your final grade is, instead, produced by two weeks of exams at the end of the entire program. Meaning you can do what you want until those final two weeks. And in those final two weeks, my goodness, it is the worst two weeks. I remember three nights in a row, getting two hours sleep before my papers.

[00:01:14]
My goodness. Anyway, there you go one of my sisters. I use to work at Icecom, it was a popular WebRTC library and then Gem, which is a block chain company that's done every possible thing in the block chain crypto space. Very, very cool company with excellent leadership. Very nice company.

[00:01:33]
All right, I run Codesmith. Very briefly, what is Codesmith? First and foremost, by the way, a center of software engineering excellence. I can't stress enough. Yes, Codesmith, in the end, produces people with the skills to go and build the things they dream up, to go and work in the companies they dream to work at.

[00:01:52]
But that is not the purpose and that speaks for everything we're going to do today. The goal of becoming a great engineer, is to have the ability to build. As a side effect of that, we get this unique opportunity to work in roles that are intellectually satisfying, creative and I guess stable, financially fulfilling.

[00:02:16]
I don't know if this ever existed before. That was a great great privilege to have that so that is what Codesmith produces, grads work at Google, Amazon, PayPal, Microsoft, Oscar, okay all these other companies. Only a quarter get senior positions, most get mid-level engineering positions. By the way, the kind of material we're seeing today is the kind of material that grads get asked interview questions on the entire time.

[00:02:44]
We surveyed grads a few weeks ago, what's the thing you get asked about most? Number one, event loop, how is it working? For mid senior jobs, number one question. Number two, closure. How is it working under the hood? Now hard part's part one has a detailed breakout of closure.

[00:03:04]
We're not going to go through it in the same level of detail, but by the way, is a preview for us to understand iterators. We're gonna need to deeply understand closure, all right. What is there to say? I will say it's been in the middle. It is special for me that every person in this room, we are independent agnostic to your background.

[00:03:29]
And the same thing goes at Goldsmith. You have the Princeton CS grad learning alongside the person who didn't go to college. And that again, the beautiful thing about software engineering. We always focus on the program. The only feedback you get in interviews is not enough experience. Everyone's favorite, but that's the most empowering feedback on earth.

[00:03:49]
This is the only industry where not enough experience is really we asked you ten questions and you go and answer four of them. Well go fill in the six over the next few days, and that's why in the end being an engineer is the ability to break through blocks in your understanding.

[00:04:06]
And what an incredibly empowering industry that is. Where you can go from not having enough experience, to just three days later having enough experience because you've broken through those blocks. And that is the ess of the Codesmith. Alright, good. The team that makes Codesmith possible, these very very very nice people.

[00:04:24]
Ugh. Shoutout to Eric. Whose movie, he has a side project, a movie called Midnight Sun, aimed at a young adult audience, had a $10 million budget, broke $25 million globally. Isn't that incredible? He's now close friends with Justine Bieber who is at the premier conference. But nevertheless, I think he does, he may have the Bieb's number.

[00:04:52]
I'm not sure. But this is a wonderful collection of people he makes Codesmith. LA, and New York. Two locations happen. Wonderful people. Snow there, who runs technical in LA, 20 years experience. Anyway wonderful people. Good. By the way, the things we look for in Codesmith candidates, just if you're interested, but I will say more significantly to everybody else.

[00:05:14]
The things that companies look for in their own engineering candidates. Not junior dev, not entry-level, but mid or senior. That is the ability to take any new feature. And implement it. Well what does that require? Problem solving, that is the fundamental thing. Can I break through a block?

[00:05:34]
Notice fifth most important is your knowledge of the language or framework. Those things, they evolve. Our friend James here already commented. The front-end frameworks, they evolve as a new Reshe? Is that a word? I made a word up. Is that a word? Is that a word? Sure. As the new boojey framework, and that's not the word either, that I'm looking for.

[00:05:55]
Reshe, Rishie, I'm sure it's a word. There's a new, someone in line is going yes. That's a word. I haven't heard that word for seven teen years. 70 years. New on trend framework every year, that's not what makes a great engineer, you're a technician, in that case. You're an angular technician, you're inflexible.

[00:06:17]
What makes a great engineer, by the way, what we look for in Code Smith candidates is your ability to break through your blocks. We're gonna do that today, and you're technical communication. When I call on every single person in this room today to talk through your code, what we're doing is refining our technical communication.

[00:06:34]
Okay, that's what we're doing. And then best practice in approach and your nontechnical communication. And even here, expectation is supporting each other. This is not an environment to show off. But rather an environment to embrace the growth of those around you which is a wonderful context in which to grow your own self.

