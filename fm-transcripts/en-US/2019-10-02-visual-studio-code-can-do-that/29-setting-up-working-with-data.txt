[00:00:00]
>> Burke Holland: I wanna talk to you about data inside of VS code. Let's talk about working with data, I'm gonna open this.
>> Burke Holland: And I think, let's see, think what we wanna do here is I'm gonna open the start folder directly.
>> Burke Holland: And, yep. All right, so I made the point earlier this morning that you really need to know about data, and be able to work with data at some point from your editor.

[00:00:33]
Now, there are a lot of different databases out there. There is SQL Server, there's MySQL, there's Postscripts, there's Oracle. There are document based databases like MongoDB, Cosmos DB, Firebase, there's a lot of them out there. Usually databases are a black box. In other words, your code talks to it, but you can't really see inside of it.

[00:00:56]
Unless you're using some sort of a command line tool, or something to query it, but you can't see it. There are sometimes third party tools that you can install like Robo 3T for MongoDB. But then you're going in and out of your editor, and depending on which third party tool you're using, it may be up to your standards or may not.

[00:01:17]
And so databases have historically been outside of the editor. One of the things that Visual Studio developers have enjoyed for a long time is an integrated sequel server experience. So if you've used Visual Studio before you know that you can connect to your SQL Server, and you can just inspect it, look at it, query it.

[00:01:36]
You can even drag out and create an object-relational mapper directly from Visual Studio. Everybody else has not had this luxury. So today, what I wanna show you is how you can bring in data into your development environment. So at this point, we've got the dial cranked way over to the left hand side like we are way towards 11, to the point now where we bringing in the database inside.

[00:01:59]
So not only are we inside of a container developing in an environment that's not on our machine, but we're gonna bring databases into the mix too. Now remember we just got done doing remote containers, we're gonna use them now. So in order for you to complete this project, you have to have SQLite, MySQL, and MongoDB installed.

[00:02:22]
But you don't, because I've created a remote container that has all of those things for you. So all you have to do here is Remote-Containers, reopen folder in container. So what I would like to do, at least is I've made some changes to this application. So that when you run it and you refresh it, it saves colors to a MongoDB database that you don't have installed.

[00:02:52]
But I've included it in the container, so it will be there. In order to connect to the database instance and work with it, you need to have the proper extension. So I've included for you the Cosmos DB extension. Now Cosmos DB is an Azure database. But the unique thing about it is that it exposes the MongoDB API.

[00:03:09]
So you can use MongoDB API to talk to Azure, which means that you can also use it to attach to any MongoDB database. So I'm just gonna go ahead and detach this one. And we wanna attach to MongoDB. So to do that, we're gonna say attach, and it's gonna say, what kind?

[00:03:27]
Say Mongo, and then it wants to know the path, the address of MongoDB. Now our MongoDB is running in a container and it's called mongo, it's right there. So in order to attach to it, this is how we do it. We say mongodb://mongo because that's the name of the container.

[00:03:48]
And because that container is linked to the container we're in, we could say Enter. And now we are attached to MongoDB. And actually I've got a database here. So let's delete this database and create it again. So what I'm gonna do here now is I need a database inside of MongoDB to store these values.

[00:04:10]
So I'm gonna create a database and just call it lamp. And then it wants to know the name of the collection, I'm gonna call that colors. Now inside of our MongoDB we have a database, and we have a colors here. So hopefully, although not being able to open on localhost 3000 was a little concerning to me, and we see if this is working.

[00:04:35]
All right, so this is our application or it should be at least let's make sure that it is. One of the things that's interesting about yeah, it's not. So react apps by the way, if you didn't know this, they have a service worker in them. And if you don't clear the site data, then it continues to show up like you actually have a site when you do not.

[00:04:57]
[LAUGH] So little tip there, make sure you clear your service workers. So I do think, it said I couldn't do a devPort of 3000 but I think I can just forward it like this. I should be able to do remote containers, forward port from container, forward port, say 3000, give me a second here.

[00:05:26]

>> Burke Holland: What I'm doing now is I'm rebuilding the container just to make sure that I'm starting fresh. And I did that from the command palette.
>> Burke Holland: You can see it's copying that little VS code server into the container.
>> Burke Holland: Let's try this again, see if we can forward a port from the container.

[00:05:48]

>> Burke Holland: All right, so my remote container is setup here is a little bit wonky, so we're inside the container but we still need to start it. And remember we can do npm run, npm start is our script.
>> Burke Holland: And now it's running. If you go back and refresh, let's do localhost 3000, and there we are.

[00:06:14]
And you can see our logs right down here. Let's go ahead and remove this color picker. So I'm gonna change this color a few times. Let go brown, let's go cyan, green, magenta.
>> Burke Holland: All right, so now what I've done is I've run the app a few times, and I've changed the colors.

[00:06:38]
And because I changed the code to write to MongoDB database we should now have some records in said database. Let's take a look here. Here's our mongo, there's our lamp, here's our colors, and here are the records that have been inserted, so we can see them now. If I click on one there's the color that I did, okay?

[00:07:00]
Now if I change this value, let's say, I change it to the only, remember this is Simon, and I click Save. It's gonna say, do you want to upload this and change the database? So I can say yeah, done. Now if I go back to look at this one, and look at this one, it's persisted.

