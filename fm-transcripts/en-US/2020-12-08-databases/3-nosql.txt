[00:00:00]
>> The first of the four different types we're gonna be looking at today of databases, a NoSQL database, which is a dumb marketing term, like serverless. Like any of those other dumb marketing terms, which you're familiar with. What NoSQL means is that it's a database that doesn't use SQL.

[00:00:19]
And that's it. That's the whole thing of the term. It was a really hot marketing term in like 2010, something like that and just stuck, right? It's a really meaningless term, but I'm putting it in so that you see it because you're gonna be seeing it in documentation all over and in marketing material.

[00:00:39]
It just means it's a non relational database. So you're gonna see that we're gonna talk about SQL databases here in a second. NoSQL is anything that falls outside of that, which is a lot of things. What we're really gonna be talking about today is a document based database which fulfills the the NoSQL paradigm.

[00:01:03]
This even gets a little bit fuzzier when you realize that some NoSQL databases can handle SQL queries. So it's wildly confusing and dumb. So yeah these databases end up being quite dissimilar from each other, but still get grouped together. So there's a bunch of reasons that you would choose one of these.

[00:01:22]
One of the biggest advantages to a NoSQL database is that their schema lists right so you can actually be defining a data like a data schema on the fly. It makes it really easy to get up and running with one of these. And it's also very conducive to the dynamic scripting kind of thinking that you would get from a JavaScript or Python type language.

[00:01:44]
The the mental models work well together and it's why we're gonna start with this one. The kind of the double edged sword here is that you never have to define databases up front to define collections or schemas or anything like that. But like if for example, if you misspell something the database be like, you're creating a new field here you go, right?

[00:02:05]
So you kinda do have to be very careful about what's going in and out and the more discipline that you can bring to your data structures, the more queryable it's gonna be later. So with great power comes great responsibility with data schemas. I think that sentence was written about data schemas in the first place, I think not Spider Man.

