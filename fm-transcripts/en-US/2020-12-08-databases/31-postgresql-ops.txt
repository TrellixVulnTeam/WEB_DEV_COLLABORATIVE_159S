[00:00:01]
>> Last thing, I am far less a master of Postgres Ops, but I just wanna talk a little bit about, they also have the idea of primary and secondary. Where you have a primary database that's then replicated out to secondary databases. Due to historical nature, this is frequently called master and slave, this is not the preferred terminology anymore.

[00:00:26]
I simply inform you that, that's what it's called. So that when you read old documentation that you can map that to the new terminology, primary and secondary. I definitely wouldn't invite you to use that terminology. In fact, if you go look through Postgres's docs, they've actually removed slave everywhere from it.

[00:00:42]
So, sometimes it's still called master, like Mongo this has a replication strategy of having primaries and secondaries. And you can write to the primaries, you can read from the secondaries. If you wannna learn more, I left a link in there we can go read more about how to administrate Postgres.

[00:01:07]
This isn't people's entire jobs, DBAs, database administrators or database architects. So I'm not gonna do them a disservice and try and explain their job when they don't truly understand everything that goes into it. I think the last thing that's worth mentioning is, we played it pretty fast and loose with users and passwords and that kind of stuff.

[00:01:30]
Don't do that in production, have one user tied to one service so that for example, if you lose all the source code, and if you lose one of the passwords. You can just invalidate part, like one user, but only had access to one database as opposed to having to invalidate everything, everywhere.

[00:01:47]
It's good to have multiple users and have the least amount of like right privilege as possible, yeah, scoped access. And yeah, I think that's really everything that you shouldn't have to worry about with Postgres from a developer's perspective. For the most part, you just need a connection string, that you're going to use to connect to Postgres.

