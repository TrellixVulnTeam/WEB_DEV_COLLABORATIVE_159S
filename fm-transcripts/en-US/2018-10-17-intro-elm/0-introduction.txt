[00:00:00]
>> Richard Feldman: So we're gonna start off with a brief introduction. This is gonna kinda go over what Elm is, who's using it. Some of the costs, cuz every technology has some costs and, of course, some benefits that come with those costs. And finally, we're gonna talk about some of the overall structure of the workshop.

[00:00:16]
Okay, so elm fundamentally is a programming language that compiles to JavaScript. So it's a separate programming language from language from JavaScript in the sense that it's got its own semantics, it's got its own syntax. But it does compile to JavaScript, which is important because that's how web browsers are able to understand it.

[00:00:31]
You might be familiar with Babel. Babel is another programming language that compiles to JavaScript. So Elm does essentially the same thing that Babel does, except the difference is that, whereas Babel has semantics that are intentionally very similar to JavaScript's, Elm has its own semantics, its own syntax, separate programming language.

[00:00:49]
TypeScript is another example of a programming language that compiles as JavaScript. Again, very intentionally close to JavaScript, but as well we'll see, Elm has a more significant departure from JavaScript, and that comes with costs and benefits. There's companies of all different sizes using Elm. Some big ones that are publicly traded companies that you've probably heard of, all the way down to smaller companies and then sort of everything in between.

[00:01:12]
Most of these companies are using Elm in various different ways. So I believe Amazon, the AWS team uses it for internal tools. I think that's how Microsoft is using it, too. Whereas we use it to power our entire front end, that's how Culture Amp does it, and everything in between.

[00:01:27]
So depending on the company and what they use Elm for, you might find that different companies have different reasons for using it.

