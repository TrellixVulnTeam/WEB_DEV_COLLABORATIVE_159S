[00:00:00]
>> I'm gonna talk now about modular web development. So what do I mean by this? Using dozens and dozens of tiny, single purpose, simple NPM packages to do pretty much anything that you'd want to do. So we already saw a little bit of this in the testing section with these pretty small, pretty well defined pieces that you can easily wrap your head around.

[00:00:22]
This is how I like to put together web apps. And in fact, it's that way of doing, of composing web apps is powerful enough to do I think pretty much anything that a big frameworky would claims to provide you. But has a lot of its own baggage that maybe you wanna see another way of doing it where you don't have to have a big config file, where you don't have to have a lot of other pieces.

[00:00:53]
So, an important thing about the web these days is that we're not just dealing with HTML files anymore. We've got real time connections with WebRTC, with WebSockets. We've got things like service workers that can sort of proxy the network connections to your whole application. We've got all kinds of different ways of formatting your webpages and making them responsive with sort of these reactive architectures.

[00:01:21]
We've also got a database in the browser, but I haven't really seen much adoption for it, but it's there. And we should be doing more things with it because it's fantastic functionality. You can make audio and visual presentations, which I'll be doing some live coding for, toward the end.

[00:01:43]
All of this stuff that's in the web now, and I think it's just a bit sad there, a lot of what you hear about web development is just making HTML forms and which, we'll get into that too. But there's just so much there to explore. What I recommend for all projects is, if you can, it's really good practice to start from zero.

[00:02:09]
And this also, this kind of this practice will sort of push you toward using simpler tools that you have to completely understand. And I think it also, from my efforts in teaching people, really helps with getting a good working memory of all of these different tools, how to set them up, how to configure them.

[00:02:28]
Because it's so easy to clone someone else's boilerplate, and then you don't understand any of it. And if it breaks, you're sort of lost, and you have your own custom changes, so your boilerplate isn't like anyone else's after a while. And it's just not the best way to go about things.

[00:02:44]
So this does take a little bit more practice and a little bit more effort at first, but I think that it's what I do, and it's what I recommend that even beginners should try to do if they can.

