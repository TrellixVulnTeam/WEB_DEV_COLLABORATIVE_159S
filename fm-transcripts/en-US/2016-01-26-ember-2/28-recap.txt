[00:00:00]
>> [MUSIC]

[00:00:04]
>> Mike North: So I'd like to start by recapping what we covered yesterday just to let everyone kind of refresh their memory as to where we stand. And then go over what I hope to cover today. And I'm definitely prepared to stay a little bit later in the interest of making sure we give you guys a complete set of skills that you can use to build a real app.

[00:00:31]
So yesterday we began with talking about the ideas behind Ember, what makes it different from some of the other web frameworks out there. We described the anatomy of an Ember app, all of the different folders. And as we've gone through some of these exercises, I hope you're starting to get an intuition for where you can find things, and starting to figure out the naming conventions in which template corresponds to a given route and so on.

[00:01:00]
We spent a lot of time going over routing and routes. We talked about services, actions, and then sort of get and set on objects, which is something that can broadly be used throughout Ember. We started talking to the Github API, just using jquery and A plus promises. Returning those from the model hook so that we could take hard coded data out of our template and start using something real.

[00:01:31]
And then where we left was we went over loading and error substates, and I'm actually gonna start going over that again since we had a little hiccup. And I want to make sure that you guys get it and that we can go through a simple example really quickly.

[00:01:48]
So after that, today we're going to get into two concepts which help you extend the semantics that are available in your templates. And those two ways are building Ember components and creating your own Handlebars Helpers. And you can think of those as sort of custom dom elements and then helper functions that are used to create strings or expressions that can be used in various different ways.

[00:02:20]
We'll follow that by talking about computed properties of very powerful and highly emphasized concept in the number two point x idioms. And then jump into testing. We'll cover unit tests, component integration tests, acceptance tests. We will cover how to mock EPI responses, in case you want to test your app in isolation without worrying about whether your API is up or down.

[00:02:51]

>> Mike North: Then, we'll get into ember-data. We'll talk about models, the store, adapters, serializers, relationships, attributes, those kinds of things. And then finally, I wanna close out by giving you guys an idea for what's coming in Ember. This could be stuff that is likely to lend in two point x release or even a three point release, but because this is a continually evolving framework, especially when weighing whether to use Ember or whether to have your own custom set of some sort.

[00:03:29]
It's important to know where things are going and what you may be able to take advantage of so you can decide how much value that's gonna be for your team.

