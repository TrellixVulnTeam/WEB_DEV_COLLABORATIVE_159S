[00:00:00]
>> And while that's going, let me set the challenge and I'm gonna do this up here complete Remote, update, call. Complete, remote, delete, call. And Completed operation, so this is the challenge I want. I think that's pretty noble there, so let me go back in The challenge description, good push.

[00:01:03]
All right, so now this is up. And I have a question here from Camille. Are services persistent? And the answer is yes. They are persistent. And so the point is that you want to load your data in one place in a persistent service, and then basically pull that in or consume that to your components.

[00:01:33]
And so that's very much the idea is that, once they're created, they are in a sense, a singleton, especially when you do provide it in route. And so that's the idea if you have the singleton service that exists, that is has your application state for the life cycle of that application.

[00:01:52]
And so now in the way that I'm coding it, my services are not stateful, but I could put it in the service and then consume in two different components. So we're doing it a little bit funny this way to be reactive, but as a whole typically what I would do is put my state in, like an object store.

[00:02:18]
And then essentially anybody who needs that data would pull that off from that and consume it and then display it. So really, really good question. But exactly is that they're persistent, other signals in and that's how you essentially share or consolidate your data into a single place. So, what I'm going to do is give everybody an opportunity to do the challenge, and then we'll come back and I will show you the answer.

