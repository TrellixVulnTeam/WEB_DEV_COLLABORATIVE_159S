[00:00:00]
>> Will Sentance: All right, let's have fun on this concept. We're gonna add a few more pieces, they're gonna be subtleties. Like, hold on, what if multiple things are being passed off into this web browser API? Hold on, how do I know when to start calling this one? There's a whole bunch of clarifications that come after the pairing.

[00:00:13]
But first, thumbs on this essential new piece. This is a whole new piece of how you think about running your JavaScript. Thumbs on, questions around this area. I have no idea. I have clarifications on this. I'm clear on these pieces we've seen so far. Everyone's thumbs are out.

[00:00:31]
Andrea's clear, Andrew's clear. Katie has a clarification, Dave has one. Katie, come do yours first.
>> Katie: The process of pushing print hello to the call stack. Is that happening within the timer? I'm visualizing that timer is a function of a web browser.
>> Will Sentance: It feels like a function, we're gonna see in a second.

[00:00:55]
After the pairing, exactly how does this function get back into JavaScript land. Or how does the references function tell JavaScript go run me when the timer completes, we're gonna see that after the pairing, great question Katy, Dave?
>> Dave: If you have 20 console logs after that would it then-

[00:01:11]

>> Will Sentance: Great question, Dave, again, very nice question. Which would run first? You've got 20 console logs. Would they run, or would the timer, which is now done, probably, would it insert itself? We will see the answer to that after the pair programming.

