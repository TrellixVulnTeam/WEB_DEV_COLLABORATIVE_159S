[00:00:00]
>> Will Sentance: Thumbs on this. I do not know what happened. I have clarifications. It's okay. This is the foundation. We get this down, closure follows very naturally, very naturally from this. No idea what happened, clarification, it's good to have clarifications, unclear on this notion besides maybe, why are we building this function inside of another function?

[00:00:22]
Okay besides that, everyone's thumbs out. Put that bit on hold, or maybe not, I don't know. Everyone saw that. No idea what happened, clarification, clear. I love building functions inside of other functions for no apparent reason.
>> Audience: [LAUGH]
>> Will Sentance: Everyone's thumbs out.
>> Will Sentance: Dave you've got a clarification.

[00:00:35]
I'd love to hear it. Clarifications are really helpful people, Dave?
>> Dave: I don't think I have a clarification. I just think it was a lot to digest.
>> Will Sentance: It is. I appreciate that, man. Why are we possibly creating a multiply by two function inside another function?
>> Will Sentance: It's disheartening, isn't it?

[00:00:53]
No, [INAUDIBLE], it's good. It's because it turns out, I'm trying not to be too intimidating, don't worry, everybody.
>> Audience: [LAUGH]
>> Will Sentance: Better? All right, it's because we get something bonus. We get a huge bonus. When we return out a function that was defined inside another function, man, we ain't just getting a function, we're gonna get a big bonus.

[00:01:20]
And we're gonna see that all play out very soon. All right, go ahead, dude?
>> Dave: Do you do that, the instruction generator as a higher order function?
>> Will Sentance: You mean taking a function to it as well?
>> Dave: Yeah.
>> Will Sentance: By definition is a higher order function because it returned out a function.

[00:01:35]
But it could also take in a function for sure. Hold that thought, that's gonna be very interesting in the challenges. All right, and at that point, I believe it is challenges. So I think it will be fun to- these are the same ones. You haven't been pairing for that long so I would say stick with your pair for now, actually.

[00:01:55]
And you know how to pair. Such a relief for me to not to have to explain pairing. Again, go straight here, csbin.io/closures, and start working through the closure challenges folk. And we're gonna come back together and see how closure works based on this material. So you're gonna be attacking problems with stuff you ain't seen yet.

[00:02:15]
We're gonna see how to do it afterwards, but tackle them for now.

