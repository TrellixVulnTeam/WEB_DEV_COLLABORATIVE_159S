[00:00:00]
>> We're gonna do kind of a whirlwind tour of what the JAMstack is, how we can use it to build our own projects. And we'll start diving into some of the more production use cases. Because the easy one is, hey, let's build a marketing site, right? But you can use the JAMstack for more than that.

[00:00:20]
You can build full-featured apps, you can build user dashboards, you can build database-powered apps that persist between things. You can combine those in any number of ways. We're gonna look at kind of simplified cases of how do to those things. And then it'll be an exercise for you to go out and combine them as you see fit to meet your business needs.

[00:00:43]
So the first thing that we're gonna do is, we're just gonna create a really basic JAMstack site. We're gonna go for the most reduced case possible. Then we're gonna deploy it, we're gonna get one up on the Internet. This is actually one of my favorite things to do, because it shows how fast we can be as developers when we when we adopt a stack like this.

[00:01:05]
We're going to learn how to use serverless functions, you've potentially heard these called lambdas, functions as a service. There are a lot of different ways that these get described, but what they ultimately mean is, it is a function that you can deploy on someone else's server. You never see the the actual implementation of that server, you just manage your few lines of JavaScript code.

[00:01:26]
And you get what is effectively a functioning server, but you only pay for execution time, as opposed to having it up all the time. We're gonna protect content with authentication. So we're gonna look at what the options are, and then we're gonna actually write one. So that we can take some content on a site, and make sure that it's only accessible if you have a valid token.

[00:01:48]
And then we'll handle reading and writing persisted data. So I want to be able to go to a website, make some changes, and then log in on my phone and see those changes again. We won't do a login with this, but we'll show how to do the database reads and writes.

[00:02:04]
So let's go ahead and get started. This is the intro that you're gonna want, or the repo that you'll wanna use. The way that it's set up is, it's going to have each of the sections in a folder. I've put some of the files in there already, like style sheets where we don't wanna write style sheets.

[00:02:23]
And just make sure you're on that start branch. If at some point you get lost, there is a cheat sheet branch that has all of the work we're gonna do. So you can always jump in there. And then we will, as we start doing the work, I will create a new branch called femprogress, and I will push changes as we get there.

[00:02:44]
So that at any point, you can check out your changes and just catch up to where we are.

