[00:00:00]
>> Kyle Simpson: Remember BigInts, they're a primitive type. So when you assign a BigInt using a literal, for example like line 2, 42n is not just the number 42, but it's 42 within this space where it can grow essentially infinitely large, up to the memory space on the system, of course.

[00:00:16]
It can essentially have an integer that grows infinitely large. That's a separate partition, it's not an IEEE number like all the other numbers in JavaScript. And you have to be very careful, because BigInts and regular numbers, they don't really mix and match that well. They're totally separated things, if you will.

[00:00:34]
And so it's gonna be really useful for us if we have a thing that looks like a number to determine is that a number, or is it a BigInt? Which is why typeof, at least at the moment, is slated to return us the string, BigInt.

