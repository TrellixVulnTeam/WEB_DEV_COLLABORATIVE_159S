[00:00:00]
>> Kyle Simpson: The same class syntax. But this is like the underneath the sugar, this is what the code would look like. This is the old school way of doing a prototypal class, so called. You notice that we have a workshop function which is going to serve sort of the purpose of the constructor.

[00:00:20]
And then we start adding methods to the Workshop.prototype, and we cog new calls and stuff. So you see some of the underpinnings of classes, but this is the plumbing underneath what is happening in the class sugar. It's not that you would really write this code anymore because if you wanted to do classes at all you almost certainly be using the class syntax.

[00:00:45]
You wouldn't write this prototypal code anymore, but I think it's important for you to understand how this plumbing works. Where are the relationships? Where are all of those linkages? Since they're not copies and since copying is actually a bad mental model, we need a different mental model that helps us understand how class works, how it really works, so that we can understand when it breaks, why did it break?

[00:01:07]
Why did it do something different than what we expected?

