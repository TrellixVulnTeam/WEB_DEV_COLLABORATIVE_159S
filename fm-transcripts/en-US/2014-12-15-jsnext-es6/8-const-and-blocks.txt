[00:00:00]
>> [MUSIC]

[00:00:03]
>> Aaron: All right, let's move on to constant. This one is wicked hard to grasp, right? Not wicked hard at all. So, it's just "CONST", use const a = 0. Don't ever try and assign me again. You'll get an error. Some of the implementations currently just go, if you tried to do a = 1 on line two, they just let you think everything's good and then you log it, and it's like I'm still zero though.

[00:00:37]
I'm not one. So they don't die when you're trying to do it, but when it all works they'll die, just trust me it will die. So, constant to like it, yeah and as far as like scoping, it behaves just like LET does, so it's lexically scoped inside of you curly braces wherever you go.

[00:00:59]
You can't re-declare it either. Any questions on constant before we move on on block functions. Constant was super simple.
>> Aaron: Okay, all right, block functions. These are cool and because of this that's what this feature called LET expressions LET statements, if anyone knows what those were, they're gone because of this.

[00:01:25]
So, if you wanted to make a temporary variable and you're a clever developer cuz we all have clever developers, we would just say if-true and put on some false block, right? So, because they're like yeah dude, they're just gonna put on an if-true and get a temporal scope there.

[00:01:44]
Let's just let them lay down a new scope just for fun. So you use a pair of curly braces and do some stuff and you've got your own scope on the fly. So that's block scope. So, I'd imagine this is gonna make code look kind of wonky and sometimes if you have three or four of these, I can imagine like a crazy pyramid of death out of this, but it's there.

[00:02:10]
So so yeah. So you don't have to do that if anymore or the if-true and scopes just as if you had an if-true. Well done with LET's stuff. Yeah.
>> Speaker 2: Question back on the CONST, do CONST have the same scope as LETs?
>> Aaron: Yeah. Yep, totally, they work just like LET, except for, you can't reassign the value once it's been assigned, so.

[00:02:35]

>> Speaker 2: Could you assign a function to a constant?
>> Aaron: Yeah, I mean if, yeah.
>> Speaker 2: I don't know why you would want to, but I'm just saying,
>> Aaron: Why wouldn't you want to? I mean like let's say you were, you know how we can monkey patch functionalities data prototype.

[00:02:52]
I mean maybe, I don't know maybe you don't want to do that. Maybe you wanna make a function that you can't overwrite I don't know. I'm not saying you do, I'm not saying you don't though like, you might wanna say good question. Good.
>> Speaker 4: Do a CONST a function, so.

[00:03:09]

>> Aaron: Const A equals function?
>> Speaker 4: Yeah, or something like that.
>> Aaron: Yeah.
>> Speaker 4: So you don't have to worry about somebody else accidentally conflicting with your code?
>> Aaron: Yeah. Yeah, you can do that. You could do that. Totes. With goats, anyone? Anyone else? Okay, so I'm gonna let you guys try out let and, yeah?

[00:03:36]

>> Speaker 2: Blocks, can you pass blocks around?
>> Aaron: That would mean that blocks are an object, and no, I mean Block is like code flow. It's not an object, yeah. It's not a function. A block is just a set of curly braces that the scope off where you want traffic to go.

[00:03:56]
That's all it is. So, so,
>> Aaron: If you guys wanna pull up, there were not Firefox installed, I asked everybody to get Firefox installed. So I'm gonna go through this real quick and I'm gonna have you guys try this step out. So if you go to the compatibility tables and we go to LET and CONST, these are all supported in Firefox, okay?

[00:04:21]
They do have that weird temporal dead-zone bug that I was telling you guys about. And then block functions. They're here too. Block-level functions. And these are supported in the latest Firefox as well. So you should be good to go. So I'm going to pull up Firefox. I'm gonna start stuttering cuz, I don't know exactly how you guys want me to say this without being confusing.

[00:04:49]
So, if I come over here and say let A equal one, it won't work. So, CONST b= 10.
>> Aaron: Const.
>> Aaron: B sorry. Anyway. Yeah. So you guys can kind of dork around with it. If you wanna to write like a,
>> Aaron: Like a function with a block scope inside of it and then call it just to make sure that the block scopes working.

[00:05:32]
Go ahead and do that. I want you to try couple things out and then we'll come back and, we probably move right on because we were kind of over on time. I want you guys to try these out for a few minutes or so let's take five and pull the Firefox your console and try some of these are just some kind of keys to Unicode with them.

[00:05:47]
So, along with Firefox or node or chrome, you can also try to run some of your code in tracer or new if you come over to table and you're like dude tracer's got it. That table we messed up. There we go, that's right. So if you're like cool tracer's tracers got and you want to try.

[00:06:09]
You don't have to open Firefox. You can come to the tracer good job site and they actually have a live rebel where you can use code in line. So, I'm actually showing you guys a class but, if you wanted to be like let equal one and it's going ,and out down here it's going to say unexpected token LET.

[00:06:30]
So, I'm going to say, "dude turn on experimental features" and it says, " yeah, no cool. I know what LET is and if you're like, "okay, what about this?"
>> Aaron: Right, so do you see what it did there? So, anyway it's like live transpiling this into a thing that It's not the exact same, but it will hopefully act to the same, right?

[00:07:18]
And I know all you guys would want to rite your code like that anyway. [LAUGH] But, yeah they let you do that. So. So yeah that's tracer though. And if you want to see what some stuff is gonna the work like You can control it out here in the live rebel.

[00:07:37]
It's kind of nice tracers a command line tool though you actually would install it locally and then you can add it to your build process with like a grant tracer. I started grant tracer and it's super simple to use but, if you want to just try to live online, this is rebels probably the easiest things of in between sessions when you're trying to stuff.

[00:08:00]
Feel free to just come out of this rubble and try to get in the way. So all right, let's move on to. Did anyone have any questions when they were trying this stuff out or did they find anything wonky?
>> Aaron: Okay. Why I asked you to use Firefox, one time, I was talking about this in a presentation, and someone got really mad, and sent feedback that I'd favored Firefox over Chrome, and they were really upset that I had done that.

[00:08:26]
And I wasn't, I mean, its wasn't trying to do that, it's just, Firefox has got the stuff. And,Chrome doesn't yet, so. I'm only asking to use it where it exists. I'm not trying to force used to Mozilla or anything. Use whatever browser you want. I'm only asking you to use it where it exists.

[00:08:42]
So used dragster or use Firefox. If you see chrome like, if it's a feature that's in Chrome good. Try that in chrome.

